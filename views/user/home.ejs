<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PAGEFLOW</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        .hero-gradient {
            background: linear-gradient(135deg, rgba(236,72,153,0.1) 0%, rgba(236,72,153,0.05) 100%);
        }
        .book-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        }
        .category-btn:hover {
            background-color: #ec4899;
            color: white;
        }
        .discount-badge {
            position: absolute;
            top: 10px;
            right: 10px;
        }
        .out-of-stock {
            position: relative;
        }
        .out-of-stock::after {
            content: "Out of Stock";
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(255,255,255,0.8);
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            color: #ef4444;
        }
        .wishlist-btn {
            position: absolute;
            top: 8px;
            right: 40px;
            background-color: rgba(237, 247, 247, 0.8);
            padding: 8px;
            border-radius: 50%;
            cursor: pointer;
            transition: background-color 0.3s, transform 0.3s, color 0.3s;
            color: #333;
        }
        .wishlist-btn:hover {
            background-color: rgba(255, 0, 0, 0.2);
            transform: scale(1.2);
        }
        .wishlist-btn.added-to-wishlist {
            color: #ff0000;
        }
        .wishlist-btn.added-to-wishlist i {
            font-style: normal;
        }
        .swal2-popup {
            font-family: 'Inter', sans-serif;
            border-radius: 10px !important;
        }
        .swal2-title {
            font-size: 1.5rem !important;
            font-weight: 600 !important;
        }
        .swal2-confirm {
            background-color: #3b82f6 !important;
            transition: all 0.3s !important;
        }
        .swal2-confirm:hover {
            background-color: #2563eb !important;
        }
        .swal2-cancel {
            background-color: #e5e7eb !important;
            transition: all 0.3s !important;
        }
        .swal2-cancel:hover {
            background-color: #d1d5db !important;
        }
    </style>
</head>
<body class="bg-white text-gray-900 font-sans">
    <%- include("../../views/partials/user/header") %>

    <!-- Hero Section -->
    <section class="hero-gradient py-16 px-4">
        <div class="container mx-auto flex flex-col md:flex-row items-center">
            <div class="md:w-1/2 mb-10 md:mb-0">
                <h1 class="text-4xl md:text-5xl font-bold mb-4 text-gray-900">Discover Your Next <span class="text-pink-600">Favorite Book</span></h1>
                <p class="text-lg mb-8 text-gray-700">Explore our curated collection of bestsellers, classics, and hidden gems.</p>
                <a href="<%= user ? '/loadShoppingPage' : '/login?message=Please log in to shop' %>" 
                   class="bg-pink-600 hover:bg-pink-700 text-white font-bold py-3 px-6 rounded-lg transition duration-300 inline-block">Shop Now</a>
            </div>
        </div>
    </section>

    <!-- Featured Books Section -->
    <section class="py-12 px-4">
        <div class="container mx-auto">
            <h2 class="text-3xl font-bold mb-8 text-center">Featured Books</h2>
            
            <% if (typeof books !== 'undefined' && books.length > 0) { %>
                <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-6">
                    <% books.forEach(book => { %>
                        <div class="book-card bg-white rounded-lg overflow-hidden shadow-md transition duration-300 relative <%= book.status !== 'Available' ? 'out-of-stock' : '' %>">
                            <!-- Discount Badge -->
                            <% if(book.totalOffer > 0) { %>
                                <span class="discount-badge bg-pink-600 text-white text-xs font-bold px-2 py-1 rounded-full">
                                    <%= book.totalOffer %>% OFF
                                </span>
                            <% } %>
                            
                            <!-- Wishlist Button -->
                            <span class="wishlist-btn <%= user && wishlistItems && wishlistItems.products.some(item => item.productId.toString() === book._id.toString()) ? 'added-to-wishlist' : '' %>" 
                                  <%= user ? `onclick="toggleWishlist('${book._id}')"` : `onclick="redirectToLogin()"` %>
                                  data-product-id="<%= book._id %>"
                                  data-in-wishlist="<%= user && wishlistItems && wishlistItems.products.some(item => item.productId.toString() === book._id.toString()) ? 'true' : 'false' %>">
                                <i class="<%= user && wishlistItems && wishlistItems.products.some(item => item.productId.toString() === book._id.toString()) ? 'fas fa-heart' : 'far fa-heart' %>"></i>
                            </span>

                            <!-- Book Image and Details -->
                            <a href="<%= user ? '/productDetails/' + book._id : '/login?message=Please log in to view product details' %>">
                                <img src="<%= book.productImage[0] || '/images/default-book.jpg' %>" 
                                     alt="<%= book.productName %>" 
                                     class="w-full h-48 object-cover">
                                <div class="p-4">
                                    <h3 class="font-bold text-lg mb-1 truncate"><%= book.productName %></h3>
                                    <p class="text-gray-600 text-sm mb-2 truncate"><%= book.description.substring(0, 50) %>...</p>
                                    <div class="flex items-center">
                                        <% if(book.totalOffer > 0) { %>
                                            <span class="text-gray-400 line-through mr-2">₹<%= book.regularPrice.toFixed(2) %></span>
                                            <span class="text-pink-600 font-bold">₹<%= book.salesPrice.toFixed(2) %></span>
                                        <% } else { %>
                                            <span class="text-pink-600 font-bold">₹<%= book.salesPrice.toFixed(2) %></span>
                                        <% } %>
                                    </div>
                                    <% if(book.averageRating > 0) { %>
                                        <div class="flex items-center mt-2">
                                            <% for(let i = 0; i < 5; i++) { %>
                                                <% if(i < Math.floor(book.averageRating)) { %>
                                                    <i class="fas fa-star text-yellow-400 text-xs"></i>
                                                <% } else if(i < book.averageRating) { %>
                                                    <i class="fas fa-star-half-alt text-yellow-400 text-xs"></i>
                                                <% } else { %>
                                                    <i class="far fa-star text-yellow-400 text-xs"></i>
                                                <% } %>
                                            <% } %>
                                            <span class="text-xs text-gray-500 ml-1">(<%= book.averageRating.toFixed(1) %>)</span>
                                        </div>
                                    <% } %>
                                </div>
                            </a>
                            
                            <!-- Add to Cart Button -->
                            <% if (book.status === 'Available') { %>
                                <div class="px-4 pb-4">
                                    <button class="add-to-cart w-full bg-pink-600 hover:bg-pink-700 text-white py-2 rounded text-sm transition duration-300" 
                                            <%= user ? `onclick="addToCart('${book._id}')"` : `onclick="redirectToLogin()"` %>
                                            data-product-id="<%= book._id %>">
                                        Add to Cart
                                    </button>
                                </div>
                            <% } %>
                        </div>
                    <% }); %>
                </div>
                
                <!-- View All Button -->
                <div class="text-center mt-8">
                    <a href="<%= user ? '/loadShoppingPage' : '/login?message=Please log in to shop' %>" 
                       class="inline-block border border-pink-600 text-pink-600 hover:bg-pink-600 hover:text-white font-medium py-2 px-6 rounded-lg transition duration-300">
                        View All Books
                    </a>
                </div>
            <% } else { %>
                <div class="text-center py-12">
                    <p class="text-gray-500">No books available at the moment. Please check back later.</p>
                </div>
            <% } %>
        </div>
    </section>

    <%- include("../../views/partials/user/footer") %>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    function redirectToLogin() {
        Swal.fire({
            title: 'Login Required',
            text: 'Please log in to perform this action.',
            icon: 'warning',
            confirmButtonText: 'Go to Login',
            buttonsStyling: false,
            customClass: {
                confirmButton: 'bg-blue-500 hover:bg-blue-600 text-white font-medium py-2 px-4 rounded'
            }
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = '/login?message=Please log in to continue';
            }
        });
    }

    async function addToCart(productId) {
        try {
            const response = await fetch(`/cart/add/${productId}`, {
                method: 'POST',
                headers: { 
                    'Content-Type': 'application/json',
                    'Accept': 'application/json'
                },
                body: JSON.stringify({ quantity: 1 }),
                credentials: 'include'
            });

            const result = await response.json();

            if (!response.ok) {
                if (result.message === 'Product is already in the cart') {
                    Swal.fire({
                        title: 'Product Already in Cart!',
                        text: 'This product is already in your cart. You can update the quantity in your cart.',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'View Cart',
                        cancelButtonText: 'Continue Shopping',
                        buttonsStyling: false,
                        customClass: {
                            confirmButton: 'bg-blue-500 hover:bg-blue-600 text-white font-medium py-2 px-4 rounded mr-2',
                            cancelButton: 'bg-gray-200 hover:bg-gray-300 text-gray-900 font-medium py-2 px-4 rounded'
                        }
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = '/profile/cart';
                        }
                    });
                    return;
                }
                throw new Error(result.message || 'Failed to add to cart');
            }

            // Update cart count
            const cartCountElement = document.querySelector('.cart-count');
            if (cartCountElement) {
                cartCountElement.textContent = result.cartCount;
            }

            // Show success message
            await Swal.fire({
                title: 'Added to Cart!',
                text: result.message || 'Product has been added to your cart',
                icon: 'success',
                showCancelButton: true,
                confirmButtonText: 'View Cart',
                cancelButtonText: 'Continue Shopping',
                buttonsStyling: false,
                customClass: {
                    confirmButton: 'bg-blue-500 hover:bg-blue-600 text-white font-medium py-2 px-4 rounded mr-2',
                    cancelButton: 'bg-gray-200 hover:bg-gray-300 text-gray-900 font-medium py-2 px-4 rounded'
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = '/profile/cart';
                }
            });

        } catch (error) {
            console.error('Error adding to cart:', error);
            Swal.fire({
                title: 'Error!',
                text: error.message || 'An error occurred while adding to cart',
                icon: 'error',
                confirmButtonText: 'OK',
                buttonsStyling: false,
                customClass: {
                    confirmButton: 'bg-blue-500 hover:bg-blue-600 text-white font-medium py-2 px-4 rounded'
                }
            });
        }
    }

    async function toggleWishlist(productId) {
        try {
            const heartBtn = document.querySelector(`.wishlist-btn[data-product-id="${productId}"]`);
            const isInWishlist = heartBtn.dataset.inWishlist === 'true';
            
            const response = await fetch(isInWishlist ? '/wishlist/remove' : '/wishlist/add', {
                method: 'POST',
                headers: { 
                    'Content-Type': 'application/json',
                    'Accept': 'application/json'
                },
                body: JSON.stringify({ productId }),
                credentials: 'include'
            });

            if (!response.ok) {
                const error = await response.json();
                if (error.loginUrl) {
                    return redirectToLogin();
                }
                throw new Error(error.message || 'Failed to update wishlist');
            }

            const result = await response.json();

            if (result.success) {
                // Update button state
                heartBtn.innerHTML = isInWishlist 
                    ? '<i class="far fa-heart"></i>' 
                    : '<i class="fas fa-heart"></i>';
                heartBtn.dataset.inWishlist = isInWishlist ? 'false' : 'true';
                heartBtn.classList.toggle('added-to-wishlist');

                // Show appropriate message
                const title = isInWishlist 
                    ? 'Removed from Wishlist!' 
                    : 'Added to Wishlist!';
                
                await Swal.fire({
                    title: title,
                    icon: 'success',
                    showCancelButton: !isInWishlist,
                    confirmButtonText: isInWishlist ? 'OK' : 'View Wishlist',
                    cancelButtonText: 'Continue Shopping',
                    buttonsStyling: false,
                    customClass: {
                        confirmButton: 'bg-blue-500 hover:bg-blue-600 text-white font-medium py-2 px-4 rounded mr-2',
                        cancelButton: 'bg-gray-200 hover:bg-gray-300 text-gray-900 font-medium py-2 px-4 rounded'
                    }
                }).then((result) => {
                    if (result.isConfirmed && !isInWishlist) {
                        window.location.href = '/profile/wishlist';
                    }
                });
            }
        } catch (error) {
            console.error('Wishlist toggle error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: error.message || 'An error occurred while updating the wishlist',
                confirmButtonText: 'OK',
                buttonsStyling: false,
                customClass: {
                    confirmButton: 'bg-blue-500 hover:bg-blue-600 text-white font-medium py-2 px-4 rounded'
                }
            });
        }
    }
</script>
</body>
</html>