<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Management</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <%- include("../../views/partials/user/header") %>
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f9fafb;
        }
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 50;
        }
        .modal-content {
            background-color: white;
            margin: 15% auto;
            padding: 20px;
            border-radius: 8px;
            width: 90%;
            max-width: 500px;
        }
        .status-delivered {
            color: #16a34a;
        }
        .status-cancelled {
            color: #dc2626;
        }
        .status-pending {
            color: #d97706;
        }
        /* Profile Container and Layout */
        .profile-container {
            background: #ffffff;
            border-radius: 10px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            overflow: hidden;
            display: flex;
            max-width: 1350px; 
            width: 90%; 
            margin: 2rem auto; 
            height: calc(105vh - 105px); 
        }
        .profile-sidebar {
            background: #2c3e50;
            color: #ffffff;
            padding: 2rem;
            width: 300px;
            height: 100%;
        }
        .profile-sidebar .card {
            background: transparent;
            border: none;
        }
        .profile-sidebar .nav-link {
            color: #d1d8e0;
            padding: 10px 15px;
            border-radius: 5px;
            margin: 5px 0;
            font-weight: 500;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
        }
        .profile-sidebar .nav-link:hover,
        .profile-sidebar .nav-link.active {
            background: #34495e;
            color: #ffffff;
        }
        .profile-sidebar .nav-link i {
            width: 20px;
            text-align: center;
            font-size: 1rem;
            margin-right: 10px;
        }
        .profile-content {
            flex: 1;
            padding: 2rem;
            background: #ffffff;
            border-radius: 0 10px 10px 0;
        }
        /* Breadcrumbs */
        .breadcrumb {
            font-size: 0.875rem;
            color: #6b7280;
            margin-bottom: 1.5rem;
            background: none;
        }
        .breadcrumb-item a {
            color: #3b82f6;
            text-decoration: none;
        }
        .breadcrumb-item a:hover {
            text-decoration: underline;
        }
    </style>
</head>
<body>
    <div class="profile-container">
        <%- include("../../views/partials/user/sidebar", { currentPage: 'orders', user: user }) %>
        <!-- Main Content -->
        <div class="profile-content">
            <!-- Breadcrumbs -->
<nav class="text-sm text-gray-600 mb-4" aria-label="breadcrumb">
    <ol class="flex space-x-2">
        <li class="flex items-center">
            <a href="/" class="hover:underline text-blue-600">Home</a>
            <span class="mx-2 text-gray-400">/</span>
        </li>
        <li class="flex items-center text-gray-500">
            Orders
        </li>
    </ol>
</nav>

            <h1 class="text-3xl font-bold text-gray-800 mb-6">Orders</h1>

            <% if (orders.length === 0) { %>
                <div class="bg-white p-6 rounded-lg shadow-md text-center">
                    <p class="text-gray-600 mb-4">You haven't placed any orders yet.</p>
                    <a href="/loadShoppingPage" class="inline-block px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700">
                        Browse Products
                    </a>
                </div>
            <% } else { %>
                <div class="mb-6">
                    <input type="text" id="searchInput" placeholder="Search orders by ID..." 
                        class="w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                </div>

                <div id="orderList" class="space-y-6">
                    <% orders.forEach(order => { %>
                        <div class="bg-white p-6 rounded-lg shadow-md order-card" data-order-id="<%= order.orderID %>">
                            <div class="flex flex-col md:flex-row justify-between items-start md:items-center gap-4">
                                <div class="space-y-2">
                                    <h2 class="text-xl font-semibold">Order #<%= order.orderID %></h2>
                                    <p class="text-gray-600">
                                        <i class="far fa-calendar-alt mr-1"></i>
                                        <%= new Date(order.orderDate).toLocaleDateString('en-US', { 
                                            year: 'numeric', 
                                            month: 'long', 
                                            day: 'numeric' 
                                        }) %>
                                    </p>
                                    <p class="text-gray-600">
                                        Status: 
                                        <span class="font-medium status-<%= order.status.toLowerCase() %>">
                                            <%= order.status %>
                                        </span>
                                    </p>
                                    <p class="text-gray-600">
                                        <i class="fas fa-receipt mr-1"></i>
                                        Total: $<%= order.totalAmount.toFixed(2) %>
                                    </p>
                                </div>
                                <div class="flex flex-wrap gap-2">
                                    <a href="/orders/<%= order.orderID %>" 
                                        class="flex items-center px-3 py-2 bg-blue-100 text-blue-800 rounded-lg hover:bg-blue-200 transition">
                                        <i class="fas fa-eye mr-2"></i> Details
                                    </a>
                                    <% if (order.status !== 'Cancelled' && order.status !== 'Delivered') { %>
                                        <button onclick="openCancelModal('<%= order.orderID %>')" 
                                            class="flex items-center px-3 py-2 bg-red-100 text-red-800 rounded-lg hover:bg-red-200 transition">
                                            <i class="fas fa-times-circle mr-2"></i> Cancel
                                        </button>
                                    <% } %>
                                    <% if (order.status === 'Delivered') { %>
                                        <button onclick="openReturnModal('<%= order.orderID %>')" 
                                            class="flex items-center px-3 py-2 bg-orange-100 text-orange-800 rounded-lg hover:bg-orange-200 transition">
                                            <i class="fas fa-undo-alt mr-2"></i> Return
                                        </button>
                                    <% } %>
                                    <a href="/api/orders/<%= order.orderID %>/invoice" 
                                        class="flex items-center px-3 py-2 bg-green-100 text-green-800 rounded-lg hover:bg-green-200 transition">
                                        <i class="fas fa-file-download mr-2"></i> Invoice
                                    </a>
                                </div>
                            </div>
                        </div>
                    <% }) %>
                </div>
            <% } %>
        </div>
    </div>

    <!-- Cancel Modal -->
    <div id="cancelModal" class="modal">
        <div class="modal-content">
            <div class="flex justify-between items-center mb-4">
                <h2 class="text-xl font-semibold">Cancel Order</h2>
                <button onclick="closeCancelModal()" class="text-gray-500 hover:text-gray-700">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <p class="mb-4">Are you sure you want to cancel this order? This action cannot be undone.</p>
            <input type="hidden" id="cancelOrderID">
            <div class="mb-4">
                <label for="cancelReason" class="block text-gray-700 mb-2">Reason for Cancellation (Optional):</label>
                <textarea id="cancelReason" class="w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500" rows="4"></textarea>
            </div>
            <div class="flex justify-end space-x-3">
                <button onclick="closeCancelModal()" class="px-4 py-2 bg-gray-300 text-gray-800 rounded-lg hover:bg-gray-400 transition">
                    Close
                </button>
                <button onclick="confirmCancelOrder()" class="px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition">
                    Confirm Cancellation
                </button>
            </div>
        </div>
    </div>

    <!-- Return Modal -->
    <div id="returnModal" class="modal">
        <div class="modal-content">
            <div class="flex justify-between items-center mb-4">
                <h2 class="text-xl font-semibold">Return Order</h2>
                <button onclick="closeReturnModal()" class="text-gray-500 hover:text-gray-700">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <p class="mb-4">Please provide a reason for returning this order.</p>
            <input type="hidden" id="returnOrderID">
            <div class="mb-4">
                <label for="returnReason" class="block text-gray-700 mb-2">Reason for Return (Required):</label>
                <textarea id="returnReason" class="w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500" rows="4" required></textarea>
            </div>
            <div class="flex justify-end space-x-3">
                <button onclick="closeReturnModal()" class="px-4 py-2 bg-gray-300 text-gray-800 rounded-lg hover:bg-gray-400 transition">
                    Close
                </button>
                <button onclick="confirmReturnOrder()" class="px-4 py-2 bg-orange-600 text-white rounded-lg hover:bg-orange-700 transition">
                    Submit Return
                </button>
            </div>
        </div>
    </div>

    <script>
        // Search
        document.getElementById('searchInput').addEventListener('input', function(e) {
            const searchTerm = e.target.value.toLowerCase().trim();
            const orderCards = document.querySelectorAll('.order-card');
            orderCards.forEach(card => {
                const orderID = card.dataset.orderId.toLowerCase();
                card.style.display = orderID.includes(searchTerm) ? '' : 'none';
            });
        });

        // Cancel modal
        function openCancelModal(orderID) {
            document.getElementById('cancelOrderID').value = orderID;
            document.getElementById('cancelModal').style.display = 'block';
        }
        function closeCancelModal() {
            document.getElementById('cancelModal').style.display = 'none';
            document.getElementById('cancelReason').value = '';
        }

        // Return modal
        function openReturnModal(orderID) {
            document.getElementById('returnOrderID').value = orderID;
            document.getElementById('returnModal').style.display = 'block';
        }
        function closeReturnModal() {
            document.getElementById('returnModal').style.display = 'none';
            document.getElementById('returnReason').value = '';
        }

        // Cancel order API
        async function confirmCancelOrder() {
            const orderID = document.getElementById('cancelOrderID').value;
            const reason = document.getElementById('cancelReason').value;

            try {
                const response = await fetch(`/api/orders/${orderID}/cancel`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': 'application/json'
                    },
                    body: JSON.stringify({ reason })
                });
                const data = await response.json();
                if (response.ok) {
                    alert(data.message || 'Order cancelled successfully.');
                    window.location.reload();
                } else {
                    alert(data.error || 'Failed to cancel order.');
                }
            } catch (error) {
                console.error('Error cancelling order:', error);
                alert('An error occurred while cancelling the order.');
            }

            closeCancelModal();
        }

        // Return order API
        async function confirmReturnOrder() {
            const orderID = document.getElementById('returnOrderID').value;
            const reason = document.getElementById('returnReason').value;

            if (!reason.trim()) {
                alert('Please provide a reason for the return.');
                return;
            }

            try {
                const response = await fetch(`/api/orders/${orderID}/return`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': 'application/json'
                    },
                    body: JSON.stringify({ reason })
                });

                const data = await response.json();

                if (response.ok) {
                    alert(data.message || 'Return request submitted successfully.');
                    window.location.reload();
                } else {
                    alert(data.error || 'Failed to submit return request.');
                    if (response.status === 400) {
                        document.getElementById('returnReason').focus();
                    }
                }
            } catch (error) {
                console.error('Error submitting return:', error);
                alert('An error occurred while submitting the return request.');
            }
        }

        // Close modals on outside click
        window.onclick = function(event) {
            if (event.target.classList.contains('modal')) {
                closeCancelModal();
                closeReturnModal();
            }
        };
    </script>
</body>
</html>