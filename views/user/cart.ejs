<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cart</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <%- include("../../views/partials/user/header") %>
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f9fafb;
        }

        /* Profile Container and Layout */
        .profile-container {
            background: #ffffff;
            border-radius: 10px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            display: flex;
            max-width: 1350px;
            width: 90%;
            margin: 2rem auto;
            height: calc(105vh - 105px);
        }

        .profile-sidebar {
            background: #2c3e50;
            color: #ffffff;
            padding: 2rem;
            width: 300px;
            height: 100%;
        }

        .profile-sidebar .card {
            background: transparent;
            border: none;
        }

        .profile-sidebar .nav-link {
            color: #d1d8e0;
            padding: 10px 15px;
            border-radius: 5px;
            margin: 5px 0;
            font-weight: 500;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
        }

        .profile-sidebar .nav-link:hover,
        .profile-sidebar .nav-link.active {
            background: #34495e;
            color: #ffffff;
        }

        .profile-sidebar .nav-link i {
            width: 20px;
            text-align: center;
            font-size: 1rem;
            margin-right: 10px;
        }

        .profile-content {
            flex: 1;
            padding: 2rem;
            background: #ffffff;
            border-radius: 0 10px 10px 0;
            max-height: 100%;
            overflow-y: auto; /* Enable vertical scrolling */
        }

        /* Breadcrumbs */
        .breadcrumb {
            font-size: 0.875rem;
            color: #6b7280;
            margin-bottom: 1.5rem;
            background: none;
        }

        .breadcrumb-item a {
            color: #3b82f6;
            text-decoration: none;
        }

        .breadcrumb-item a:hover {
            text-decoration: underline;
        }

        /* Cart Table */
        .cart-table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 2rem;
        }

        .cart-table th,
        .cart-table td {
            padding: 1rem;
            text-align: left;
            border-bottom: 1px solid #e5e7eb;
        }

        .cart-table th {
            background: #f9fafb;
            font-weight: 600;
        }

        .quantity-control {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .quantity-control button {
            background: #3b82f6;
            color: white;
            border: none;
            padding: 0.25rem 0.5rem;
            cursor: pointer;
            border-radius: 4px;
        }

        .quantity-control button:disabled {
            background: #d1d5db;
            cursor: not-allowed;
        }

        .remove-btn {
            color: #ef4444;
            background: none;
            border: none;
            cursor: pointer;
        }

        .out-of-stock {
            color: #ef4444;
            font-weight: 500;
        }

        .checkout-btn {
            background: #3b82f6;
            color: white;
            padding: 0.75rem 1.5rem;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-weight: 500;
            transition: background-color 0.2s;
        }

        .checkout-btn:hover:not(:disabled) {
            background: #2563eb;
        }

        .checkout-btn:disabled {
            background: #d1d5db;
            cursor: not-allowed;
        }

        .empty-cart {
            background: white;
            padding: 2rem;
            border-radius: 0.5rem;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            text-align: center;
        }

        .browse-btn {
            display: inline-block;
            margin-top: 1rem;
            padding: 0.5rem 1.5rem;
            background: #3b82f6;
            color: white;
            border-radius: 0.375rem;
            text-decoration: none;
            font-weight: 500;
            transition: background-color 0.2s;
        }

        .browse-btn:hover {
            background: #2563eb;
        }

        /* Summary Table */
        .summary-table {
            width: 100%;
            max-width: 400px;
            border-collapse: collapse;
            margin: 2rem 0;
            background: #ffffff;
            border-radius: 8px;
            overflow: hidden;
            animation: slideIn 0.5s ease-out;
        }

        .summary-table th,
        .summary-table td {
            padding: 0.75rem 1rem;
            text-align: left;
        }

        .summary-table th {
            background: #3b82f6;
            color: #ffffff;
            font-weight: 600;
        }

        .summary-table td {
            color: #1e293b;
            border-bottom: 1px solid #e5e7eb;
        }

        .summary-table tr:last-child td {
            border-bottom: none;
            font-weight: 700;
            font-size: 1.25rem;
            color: #16a34a;
        }

        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
    </style>
</head>

<body>
    <div class="profile-container">
        <%- include("../../views/partials/user/sidebar", { currentPage: 'cart', user: user }) %>
        <div class="profile-content">
            <!-- Breadcrumbs -->
            <nav class="text-sm text-gray-600 mb-4" aria-label="breadcrumb">
                <ol class="flex space-x-2">
                    <li class="flex items-center">
                        <a href="/home" class="hover:underline text-blue-600">Home</a>
                        <span class="mx-2 text-gray-400">/</span>
                    </li>
                    <li class="flex items-center text-gray-500">
                        Cart
                    </li>
                </ol>
            </nav>

            <h1 class="text-3xl font-bold text-gray-800 mb-6">Cart</h1>

            <% if (cart && cart.items.length > 0) { %>
                <div class="bg-white rounded-lg shadow overflow-hidden">
                    <table class="cart-table">
                        <thead>
                            <tr>
                                <th>Product</th>
                                <th>Price</th>
                                <th>Quantity</th>
                                <th>Total</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% cart.items.forEach(item => { %>
                                <tr>
                                    <td>
                                        <%= item.productId ? item.productId.productName : 'Unknown Product' %>
                                        <% if (item.isOutOfStock) { %>
                                            <div class="out-of-stock">Out of Stock</div>
                                        <% } else if (item.isInvalid) { %>
                                            <div class="out-of-stock">Unavailable</div>
                                        <% } %>
                                    </td>
                                    <td>₹<%= item.price.toFixed(2) %></td>
                                    <td>
                                        <div class="quantity-control">
                                            <button 
                                                onclick="updateQuantity('<%= item.productId._id %>', 'decrement')"
                                                <%= item.quantity <= 1 || item.isOutOfStock || item.isInvalid ? 'disabled' : '' %>
                                            >-</button>
                                            <span><%= item.quantity %></span>
                                            <button 
                                                onclick="updateQuantity('<%= item.productId._id %>', 'increment')"
                                                <%= (item.quantity >= item.productId.stock || item.isOutOfStock || item.isInvalid) ? 'disabled' : '' %>
                                            >+</button>
                                        </div>
                                        <% if (item.quantity >= item.productId.stock && !item.isOutOfStock && !item.isInvalid) { %>
                                            <div class="text-xs text-red-500 mt-1" data-stock="<%= item.productId.stock %>">Max stock reached</div>
                                        <% } %>
                                    </td>
                                    <td>₹<%= item.totalPrice.toFixed(2) %></td>
                                    <td>
                                        <button class="remove-btn" onclick="removeFromCart('<%= item.productId._id %>')">
                                            <i class="fas fa-trash-alt mr-1"></i> Remove
                                        </button>
                                    </td>
                                </tr>
                            <% }) %>
                        </tbody>
                    </table>

                    <!-- Summary Table -->
                    <div class="flex justify-end p-4">
                        <table class="summary-table">
                            <thead>
                                <tr>
                                    <th colspan="2">Order Summary</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>Subtotal</td>
                                    <td>₹<%= total.toFixed(2) %></td>
                                </tr>
                                <tr>
                                    <td>Discount</td>
                                    <td>-₹<%- discount ? discount.toFixed(2) : '0.00' %></td>
                                </tr>
                                <tr>
                                    <td>Total</td>
                                    <td>₹<%- (total - (discount || 0)).toFixed(2) %></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                    <div class="flex justify-end p-4">
                        <button class="checkout-btn" onclick="proceedToCheckout()"
                            <%= !hasValidItems ? 'disabled' : '' %>>
                            <i class="fas fa-credit-card mr-2"></i> Proceed to Checkout
                        </button>
                    </div>
                </div>
            <% } else { %>
                <div class="empty-cart">
                    <p class="text-gray-600 mb-4">Your cart is empty.</p>
                    <a href="/loadShoppingPage" class="browse-btn">
                        <i class="fas fa-shopping-bag mr-2"></i> Browse Products
                    </a>
                </div>
            <% } %>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        async function updateQuantity(productId, action) {
            try {
                const response = await fetch('/cart/update', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ productId, action })
                });

                const result = await response.json();

                if (result.success) {
                    // Update UI
                    updateCartUI(productId, result.newQuantity, result.newTotalPrice);
                    // Update button states
                    updateButtonStates(productId, result.newQuantity);
                    // Update total
                    updateCartTotal(result.total);

                    // Show SweetAlert if quantity reaches 10
                    if (action === 'increment' && result.newQuantity >= 10) {
                        Swal.fire({
                            icon: 'warning',
                            title: 'Limit Reached',
                            text: 'You have reached the maximum quantity limit of 10.',
                            confirmButtonText: 'OK',
                            confirmButtonColor: '#3b82f6'
                        });
                    }
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: result.message || 'Failed to update quantity.',
                        confirmButtonText: 'OK',
                        showCancelButton: true,
                        cancelButtonText: 'Continue Shopping',
                        cancelButtonColor: '#3b82f6'
                    }).then((result) => {
                        if (result.dismiss === Swal.DismissReason.cancel) {
                            window.location.href = '/loadShoppingPage';
                        }
                    });
                }
            } catch (error) {
                console.error('Error updating quantity:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Error updating quantity. Please try again.',
                    confirmButtonText: 'OK',
                    showCancelButton: true,
                    cancelButtonText: 'Continue Shopping',
                    cancelButtonColor: '#3b82f6'
                }).then((result) => {
                    if (result.dismiss === Swal.DismissReason.cancel) {
                        window.location.href = '/loadShoppingPage';
                    }
                });
            }
        }

        function updateCartUI(productId, newQuantity, newTotalPrice) {
            const row = document.querySelector(`tr td button[onclick*="updateQuantity('${productId}'"]`).closest('tr');
            if (!row) return;

            // Update quantity
            const quantitySpan = row.querySelector('.quantity-control span');
            if (quantitySpan) {
                quantitySpan.textContent = newQuantity;
            }

            // Update total price for the item
            const totalPriceCell = row.cells[3];
            if (totalPriceCell) {
                totalPriceCell.textContent = `₹${newTotalPrice.toFixed(2)}`;
            }

            // Update stock message
            const stockMessage = row.querySelector('.text-xs.text-red-500');
            if (stockMessage) {
                stockMessage.style.display = newQuantity >= parseInt(stockMessage.dataset.stock || Infinity) ? 'block' : 'none';
            }
        }

        function updateButtonStates(productId, newQuantity) {
            const row = document.querySelector(`tr td button[onclick*="updateQuantity('${productId}'"]`).closest('tr');
            if (!row) return;

            const decrementBtn = row.querySelector(`button[onclick="updateQuantity('${productId}', 'decrement')"]`);
            const incrementBtn = row.querySelector(`button[onclick="updateQuantity('${productId}', 'increment')"]`);

            if (decrementBtn) {
                decrementBtn.disabled = newQuantity <= 1;
            }

            if (incrementBtn) {
                const stock = parseInt(row.querySelector('.text-xs.text-red-500')?.dataset.stock || 10);
                incrementBtn.disabled = newQuantity >= stock || newQuantity >= 10;
            }
        }

        async function removeFromCart(productId) {
            try {
                const response = await fetch(`/cart/${productId}`, {
                    method: 'DELETE'
                });
                const result = await response.json();

                if (result.success) {
                    // Remove the row
                    const row = document.querySelector(`tr td button[onclick="removeFromCart('${productId}')"]`).closest('tr');
                    if (row) {
                        row.remove();
                    }

                    // Check if cart is empty
                    const tableBody = document.querySelector('.cart-table tbody');
                    if (tableBody.children.length === 0) {
                        const cartContent = document.querySelector('.profile-content');
                        cartContent.innerHTML = `
                            <div class="empty-cart">
                                <p class="text-gray-600 mb-4">Your cart is empty.</p>
                                <a href="/loadShoppingPage" class="browse-btn">
                                    <i class="fas fa-shopping-bag mr-2"></i> Browse Products
                                </a>
                            </div>
                        `;
                    }

                    // Update total
                    updateCartTotal(result.total);
                    updateCheckoutButton();
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: result.message || 'Failed to remove product.',
                        confirmButtonText: 'OK',
                        showCancelButton: true,
                        cancelButtonText: 'Continue Shopping',
                        cancelButtonColor: '#3b82f6'
                    }).then((result) => {
                        if (result.dismiss === Swal.DismissReason.cancel) {
                            window.location.href = '/loadShoppingPage';
                        }
                    });
                }
            } catch (error) {
                console.error('Error removing product:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Error removing product.',
                    confirmButtonText: 'OK',
                    showCancelButton: true,
                    cancelButtonText: 'Continue Shopping',
                    cancelButtonColor: '#3b82f6'
                }).then((result) => {
                    if (result.dismiss === Swal.DismissReason.cancel) {
                        window.location.href = '/loadShoppingPage';
                    }
                });
            }
        }

        function updateCartTotal(total) {
            const totalElement = document.querySelector('.summary-table tr:last-child td:last-child');
            if (totalElement) {
                totalElement.textContent = `₹${total.toFixed(2)}`;
            }
        }

        function updateCheckoutButton() {
            const checkoutBtn = document.querySelector('.checkout-btn');
            const tableBody = document.querySelector('.cart-table tbody');
            if (checkoutBtn && tableBody && tableBody.children.length === 0) {
                checkoutBtn.disabled = true;
            }
        }

        document.addEventListener('DOMContentLoaded', () => {
            document.querySelectorAll('.cart-table tbody tr').forEach(row => {
                const decrementBtn = row.querySelector('button[onclick*="decrement"]');
                const incrementBtn = row.querySelector('button[onclick*="increment"]');
                const quantity = parseInt(row.querySelector('.quantity-control span').textContent);
                const stockMessage = row.querySelector('.text-xs.text-red-500');
                const stock = stockMessage ? parseInt(stockMessage.dataset.stock || 10) : 10;

                if (decrementBtn) {
                    decrementBtn.disabled = quantity <= 1;
                }
                if (incrementBtn) {
                    incrementBtn.disabled = quantity >= stock || quantity >= 10;
                }
            });
        });

        function proceedToCheckout() {
            window.location.href = '/checkout';
        }
    </script>
</body>
</html>