<%- include("../../views/partials/user/header") %>
<style>
    .main-container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 20px;
    }

    .product-details-container {
      display: flex;
      gap: 30px;
      flex-wrap: wrap;
    }

    .product-images {
      flex: 1;
      min-width: 300px;
      position: relative;
    }

    .main-image {
      width: 100%;
      height: 400px;
      object-fit: contain; /* Changed from cover to contain to show full image */
      border-radius: 10px;
      margin-bottom: 10px;
      transition: transform 0.3s ease;
    }

    .main-image:hover {
      transform: scale(1.2); /* Zoom effect on hover */
      z-index: 10;
    }

    .thumbnail-container {
      display: flex;
      gap: 10px;
      flex-wrap: wrap;
    }

    .thumbnail {
      width: 80px;
      height: 120px;
      object-fit: cover;
      border-radius: 5px;
      cursor: pointer;
      border: 2px solid transparent;
      transition: border 0.3s;
    }

    .thumbnail:hover,
    .thumbnail.active {
      border: 2px solid #007bff;
    }

    .product-info {
      flex: 1;
      min-width: 300px;
    }

    .product-title {
      font-size: 24px;
      font-weight: bold;
      margin-bottom: 10px;
      color: #333;
    }

    .category-name {
      font-size: 16px;
      color: #666;
      margin-bottom: 15px;
    }

    .price-section {
      margin-bottom: 20px;
    }

    .current-price {
      font-size: 22px;
      font-weight: bold;
      color: #28a745;
    }

    .original-price {
      font-size: 16px;
      color: #d24979;
      text-decoration: line-through;
      margin-left: 10px;
    }

    .offer-info {
      font-size: 14px;
      color: #333;
      margin-top: 5px;
    }

    .offer-badge {
      display: inline-block;
      background-color: #28a745;
      color: white;
      padding: 3px 8px;
      border-radius: 4px;
      font-size: 12px;
      font-weight: bold;
      margin-top: 5px;
    }

    .stock-status {
      font-size: 14px;
      margin-bottom: 15px;
    }

    .stock-status.out-of-stock {
      color: #e74c3c;
    }

    .stock-status.available {
      color: #28a745;
    }

    .quantity-selector {
      display: flex;
      align-items: center;
      gap: 10px;
      margin-bottom: 20px;
    }

    .quantity-btn {
      background-color: #f1f1f1;
      border: none;
      padding: 5px 10px;
      cursor: pointer;
      font-size: 16px;
      border-radius: 5px;
    }

    .quantity-input {
      width: 50px;
      text-align: center;
      border: 1px solid #ddd;
      border-radius: 5px;
      padding: 5px;
    }

    .action-buttons {
      display: flex;
      gap: 15px;
      margin-bottom: 20px;
    }

    .add-to-cart-btn,
    .buy-now-btn {
      padding: 12px 20px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      font-size: 16px;
      font-weight: 500;
      flex: 1;
      transition: background-color 0.3s ease, transform 0.2s ease;
    }

    .add-to-cart-btn {
      background-color: #d24979;
      color: #fff;
    }

    .add-to-cart-btn:hover:not(:disabled) {
      background-color: #b93c66;
      transform: translateY(-2px);
    }

    .buy-now-btn {
      background-color: #20c997;
      color: #fff;
    }

    .buy-now-btn:hover:not(:disabled) {
      background-color: #1aa179;
      transform: translateY(-2px);
    }

    .add-to-cart-btn:disabled,
    .buy-now-btn:disabled {
      background-color: #d3d3d3;
      color: #6c757d;
      cursor: not-allowed;
    }

    .wishlist-btn {
      background: none;
      border: none;
      font-size: 20px;
      cursor: pointer;
      color: #ff0000;
    }

    .description {
      font-size: 14px;
      color: #666;
      line-height: 1.6;
    }

    @media (max-width: 768px) {
      .product-details-container {
        flex-direction: column;
      }

      .main-image {
        height: 300px;
      }

      .action-buttons {
        flex-direction: column;
      }

      .add-to-cart-btn,
      .buy-now-btn {
        width: 100%;
      }
    }

    /* SweetAlert2 Custom Styling */
    .swal2-popup {
      font-family: 'Inter', sans-serif;
      border-radius: 10px !important;
    }

    .swal2-title {
      font-size: 1.5rem !important;
      font-weight: 600 !important;
    }

    .swal2-confirm {
      background-color: #1e918b !important;
      transition: all 0.3s !important;
    }

    .swal2-confirm:hover {
      background-color: #1a7c76 !important;
      transform: translateY(-2px) !important;
    }

    .swal2-cancel {
      transition: all 0.3s !important;
    }

    .swal2-cancel:hover {
      transform: translateY(-2px) !important;
    }
</style>
<link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">

<div class="main-container">
    <div class="page-header breadcrumb-wrap bg-light py-3 mb-4">
      <div class="container">
        <nav class="breadcrumb" aria-label="Breadcrumb">
          <a href="/" class="breadcrumb-item">Home</a>
          <span class="breadcrumb-separator" aria-hidden="true">/</span>
          <a href="/loadShoppingPage" class="breadcrumb-item">Shop</a>
          <span class="breadcrumb-separator" aria-hidden="true">/</span>
          <span class="breadcrumb-item active" aria-current="page"><%= product.productName %></span>
        </nav>
      </div>
    </div>
    <section class="product-details">
      <div class="product-details-container">
        <div class="product-images">
          <img src="<%= product.productImage[0] || '/default-image.jpg' %>" alt="<%= product.productName %>" class="main-image" id="mainImage">
          <div class="thumbnail-container">
            <% product.productImage.forEach((img, index) => { %>
              <img src="<%= img %>" alt="Thumbnail <%= index + 1 %>" class="thumbnail <%= index === 0 ? 'active' : '' %>" onclick="changeImage('<%= img %>', this)">
            <% }) %>
          </div>
        </div>
        <div class="product-info">
          <h1 class="product-title"><%= product.productName %></h1>
          <p class="category-name">Category: <%= category.name %></p>
          <div class="price-section">
            <span class="current-price">₹<%= product.discountedPrice || product.salesPrice || product.regularPrice %></span>
            <% if (totalOffer > 0) { %>
              <span class="original-price">₹<%= product.regularPrice.toLocaleString('en-IN') %></span>
              <div class="offer-info">
                <span class="offer-badge"><%= totalOffer %>% OFF (<%= offerType === 'category' ? 'Category' : 'Product' %>)</span>
              </div>
            <% } %>
          </div>
          <p class="stock-status <%= product.status === 'out of stock' ? 'out-of-stock' : 'available' %>">
            <%= product.status === 'out of stock' ? 'Out of Stock' : 'In Stock' %>
          </p>
          <div class="quantity-selector">
            <button class="quantity-btn" onclick="changeQuantity(-1)">-</button>
            <input type="number" class="quantity-input" id="quantity" value="1" min="1" max="<%= product.quantity %>" readonly>
            <button class="quantity-btn" onclick="changeQuantity(1)">+</button>
          </div>
          <div class="action-buttons">
            <button class="add-to-cart-btn" 
              onclick="addToCart('<%= product._id %>')" 
              <%= product.status === 'out of stock' ? 'disabled' : '' %>>
              <%= product.status === 'out of stock' ? 'Out of Stock' : 'Add to Cart' %>
            </button>
            <!-- <button class="buy-now-btn" 
              onclick="buyNow('<%= product._id %>')" 
              <%= product.status === 'out of stock' ? 'disabled' : '' %>>
              <%= product.status === 'out of stock' ? 'Out of Stock' : 'Buy Now' %>
            </button> -->
            <button class="wishlist-btn" 
              onclick="addToWishlist('<%= product._id %>')"
              data-product-id="<%= product._id %>">
              ❤️
            </button>
          </div>
          <div class="description">
            <h3>Description</h3>
            <p><%= product.description %></p>
          </div>
        </div>
      </div>
    </section>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  function changeImage(src, element) {
    document.getElementById('mainImage').src = src;
    document.querySelectorAll('.thumbnail').forEach(thumb => thumb.classList.remove('active'));
    element.classList.add('active');
  }

  function changeQuantity(change) {
    const input = document.getElementById('quantity');
    let value = parseInt(input.value);
    const max = parseInt(input.max);
    value += change;
    if (value < 1) value = 1;
    if (value > max) value = max;
    input.value = value;
  }

  async function addToCart(productId) {
    const quantity = parseInt(document.getElementById('quantity').value);
    try {
      const response = await fetch(`/cart/add/${productId}`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ productId, quantity }),
        credentials: 'include'
      });
      const result = await response.json();
      if (result.success) {
        Swal.fire({
          title: 'Added to Cart!',
          text: 'Product has been added to your cart',
          icon: 'success',
          showCancelButton: true,
          confirmButtonText: 'View Cart',
          cancelButtonText: 'Continue Shopping'
        }).then((result) => {
          if (result.isConfirmed) {
            window.location.href = '/profile/cart';
          }
        });
      } else {
        Swal.fire({
          title: 'Error!',
          text: result.message || 'Failed to add to cart',
          icon: 'error',
          confirmButtonText: 'OK'
        });
      }
    } catch (error) {
      console.error('Error adding to cart:', error);
      Swal.fire({
        title: 'Error!',
        text: 'An error occurred',
        icon: 'error',
        confirmButtonText: 'OK'
      });
    }
  }

  async function addToWishlist(productId) {
    try {
      const response = await fetch('/wishlist/add', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ productId }),
        credentials: 'include'
      });
      const result = await response.json();
      if (result.success) {
        const heartBtn = document.querySelector(`[data-product-id="${productId}"]`);
        if (heartBtn) {
          heartBtn.innerHTML = '❤️';
          heartBtn.style.color = 'red';
          heartBtn.classList.add('added-to-wishlist');
        }
        Swal.fire({
          title: 'Added to Wishlist!',
          text: 'Product has been added to your wishlist',
          icon: 'success',
          showCancelButton: true,
          confirmButtonText: 'View Wishlist',
          cancelButtonText: 'Continue Shopping'
        }).then((result) => {
          if (result.isConfirmed) {
            window.location.href = '/profile/wishlist';
          }
        });
      } else {
        Swal.fire({
          title: 'Error!',
          text: result.message || 'Failed to add to wishlist',
          icon: 'error',
          confirmButtonText: 'OK'
        });
      }
    } catch (error) {
      console.error('Error adding to wishlist:', error);
      Swal.fire({
        title: 'Error!',
        text: 'An error occurred',
        icon: 'error',
        confirmButtonText: 'OK'
      });
    }
  }
</script>

<%- include("../../views/partials/user/footer") %>