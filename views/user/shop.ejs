<%- include("../../views/partials/user/header") %>
<style>
    .main-container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 20px;
    }

    .shop-topbar {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
    }

    .search-bar {
      display: flex;
      align-items: center;
    }

    .search-form {
      display: flex;
      align-items: center;
      background-color: #f1f1f1;
      border-radius: 25px;
      overflow: hidden;
      max-width: 250px;
      box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
    }

    .search-input {
      flex: 1;
      padding: 8px 10px;
      font-size: 14px;
      border: none;
      outline: none;
      background-color: transparent;
    }

    .search-button {
      padding: 8px 15px;
      background-color: #1e918b;
      color: #fff;
      border: none;
      cursor: pointer;
      font-size: 14px;
      border-radius: 15px;
      margin-right: 5px;
      transition: background-color 0.3s, transform 0.2s;
    }

    .search-button:hover {
      background-color: #0056b3;
      transform: scale(1.05);
    }

    .clear-all-button {
      padding: 8px 15px;
      background-color: #e74c3c;
      color: #fff;
      border: none;
      cursor: pointer;
      font-size: 14px;
      border-radius: 15px;
      margin-left: 10px;
      transition: background-color 0.3s, transform 0.2s;
    }

    .clear-all-button:hover {
      background-color: #c0392b;
      transform: scale(1.05);
    }

    .sidebar {
      padding: 20px;
      border: 1px solid #ddd;
      background-color: #f9f9f9;
      border-radius: 8px;
      margin-bottom: 20px;
      width: 250px;
      text-align: center;
    }

    .filter-section {
      margin-bottom: 20px;
    }

    .filter-title {
      font-weight: bold;
      margin-bottom: 10px;
      font-size: 16px;
      color: #333;
    }

    .filter-item {
      margin: 5px 0;
    }

    .filter-item a {
      text-decoration: none;
      color: #333;
    }

    .filter-item a:hover {
      color: #007bff;
    }

    .product-list-container {
      display: flex;
      gap: 20px;
    }

    .product-grid {
      display: flex;
      flex-wrap: wrap;
      gap: 20px;
      width: calc(100% - 270px);
    }

    .product-card {
      width: calc(33.333% - 14px);
      border: 1px solid #ddd;
      padding: 10px;
      border-radius: 10px;
      text-align: center;
      position: relative;
      transition: transform 0.3s, box-shadow 0.3s;
    }

    .product-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    }

    .product-card img {
      max-width: 100%;
      height: 200px;
      object-fit: cover;
      border-radius: 5px;
    }

    .product-description {
      font-size: 14px;
      color: #666666;
      margin: 5px 0;
      line-height: 1.4;
      display: -webkit-box;
      -webkit-line-clamp: 2;
      line-clamp: 2;
      -webkit-box-orient: vertical;
      box-orient: vertical;
      overflow: hidden;
      text-overflow: ellipsis;
    }

    .wishlist-btn {
      position: absolute;
      top: 8px;
      right: 8px;
      background-color: rgba(237, 247, 247, 0.8);
      padding: 8px;
      border-radius: 50%;
      cursor: pointer;
      transition: background-color 0.3s, transform 0.3s, color 0.3s;
      color: #333;
    }

    .wishlist-btn:hover {
      background-color: rgba(255, 0, 0, 0.2);
      transform: scale(1.2);
    }

    .wishlist-btn.added-to-wishlist {
      color: #ff0000;
    }

    .wishlist-btn.added-to-wishlist i {
      font-style: normal;
    }

    .button-group {
      display: flex;
      gap: 10px;
      justify-content: center;
      margin-top: 10px;
    }

    .add-to-cart-btn,
    .buy-now-btn {
      padding: 10px 15px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      font-size: 14px;
      font-weight: 500;
      flex: 1;
      transition: background-color 0.3s ease, transform 0.2s ease;
    }

    .add-to-cart-btn {
      background-color: #d24979;
      color: #fff;
    }

    .add-to-cart-btn:hover:not(:disabled) {
      background-color: #b93c66;
      transform: translateY(-2px);
    }

    .buy-now-btn {
      background-color: #20c997;
      color: #fff;
    }

    .buy-now-btn:hover:not(:disabled) {
      background-color: #1aa179;
      transform: translateY(-2px);
    }

    .add-to-cart-btn:disabled,
    .buy-now-btn:disabled {
      background-color: #d3d3d3;
      color: #6c757d;
      cursor: not-allowed;
    }

    @media (max-width: 576px) {
      .button-group {
        flex-direction: column;
        gap: 8px;
      }

      .add-to-cart-btn,
      .buy-now-btn {
        width: 100%;
      }

      .product-card {
        width: 100%;
      }
    }

    .stock-status {
      font-size: 14px;
      margin-top: 5px;
    }

    .stock-status.out-of-stock {
      color: #e74c3c;
    }

    .stock-status.available {
      color: #28a745;
    }

    .pagination {
      display: flex;
      justify-content: center;
      gap: 10px;
      margin: 20px 0;
    }

    .pagination a {
      padding: 8px 12px;
      background-color: #f0f0f0;
      border: 1px solid #ddd;
      color: #333;
      text-decoration: none;
      border-radius: 5px;
      transition: background-color 0.3s;
    }

    .pagination a:hover {
      background-color: #007bff;
      color: #fff;
    }

    .pagination .active {
      background-color: #007bff;
      color: #fff;
      border-color: #007bff;
    }

    .price-filter {
      padding: 10px;
      background-color: #f9f9f9;
      border-radius: 8px;
      margin-top: 20px;
    }

    .price-options {
      display: flex;
      flex-direction: column;
      gap: 10px;
    }

    .price-button {
      padding: 12px 20px;
      background-color: #f1f1f1;
      color: #333;
      border: 1px solid #ddd;
      border-radius: 30px;
      cursor: pointer;
      transition: background-color 0.3s, transform 0.2s;
      text-align: center;
      font-size: 14px;
    }

    .price-button:hover {
      background-color: #007bff;
      color: #fff;
      transform: scale(1.05);
    }

    .price-button.active {
      background-color: #007bff;
      color: white;
      border-color: #007bff;
    }

    .text-muted {
      color: #d24979 !important;
    }

    .category-brand-container {
      text-align: center;
    }

    .sort-bar {
      display: flex;
      align-items: center;
    }

    .sort-form {
      margin-left: 20px;
    }

    .sort-dropdown {
      padding: 8px 15px;
      font-size: 14px;
      border-radius: 25px;
      border: 1px solid #ddd;
      background-color: #f1f1f1;
      cursor: pointer;
      outline: none;
    }

    .sort-dropdown:hover {
      background-color: #e0e0e0;
    }

    .product-name {
      font-size: 16px;
      font-weight: bold;
      margin: 5px 0;
      line-height: 1.4;
      display: -webkit-box;
      -webkit-line-clamp: 2;
      line-clamp: 2;
      -webkit-box-orient: vertical;
      box-orient: vertical;
      overflow: hidden;
      text-overflow: ellipsis;
      min-height: 2.8em;
      max-height: 2.8em;
      color: #333;
    }

    .offer-badge {
      position: absolute;
      top: 8px;
      left: 8px;
      background-color: #28a745;
      color: white;
      padding: 3px 8px;
      border-radius: 4px;
      font-size: 12px;
      font-weight: bold;
    }

    .swal2-popup {
      font-family: 'Inter', sans-serif;
      border-radius: 10px !important;
    }

    .swal2-title {
      font-size: 1.5rem !important;
      font-weight: 600 !important;
    }

    .swal2-confirm {
      background-color: #3b82f6 !important;
      transition: all 0.3s !important;
    }

    .swal2-confirm:hover {
      background-color: #2563eb !important;
    }

    .swal2-cancel {
      background-color: #e5e7eb !important;
      transition: all 0.3s !important;
    }

    .swal2-cancel:hover {
      background-color: #d1d5db !important;
    }

    .filter-item a.active {
      color: #007bff;
      font-weight: bold;
      background-color: #e6f0fa;
      padding: 5px 10px;
      border-radius: 5px;
      display: inline-block;
    }
</style>
<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

<div class="main-container">
    <div class="page-header breadcrumb-wrap bg-light py-3 mb-4">
      <div class="container">
        <nav class="breadcrumb" aria-label="Breadcrumb">
          <a href="/" class="breadcrumb-item">Home</a>
          <span class="breadcrumb-separator" aria-hidden="true">/</span>
          <span class="breadcrumb-item active" aria-current="page">Shop</span>
        </nav>
      </div>
    </div>
    <section class="shop-page container">
      <div class="shop-topbar">
        <div class="search-bar">
          <form action="/loadShoppingPage" method="GET" class="search-form">
            <input type="text" name="query" placeholder="Search items..." class="search-input"
              value="<%= query || '' %>" />
            <button type="submit" class="search-button">Search</button>
            <input type="hidden" name="page" value="<%= currentPage %>">
            <input type="hidden" name="sort" value="<%= sort || '' %>">
            <input type="hidden" name="price" value="<%= price || '' %>">
            <input type="hidden" name="category" value="<%= selectedCategory || '' %>">
          </form>
          <a href="/loadShoppingPage">
            <button type="button" class="clear-all-button">Clear All Filters</button>
          </a>
        </div>
        <div class="sort-bar">
          <form action="/loadShoppingPage" method="GET" class="sort-form">
            <select name="sort" onchange="this.form.submit()" class="sort-dropdown">
              <option value="" <%= !sort ? 'selected' : '' %>>Sort by</option>
              <option value="price-low-high" <%= sort === 'price-low-high' ? 'selected' : '' %>>Price: Low to High</option>
              <option value="price-high-low" <%= sort === 'price-high-low' ? 'selected' : '' %>>Price: High to Low</option>
              <option value="name-asc" <%= sort === 'name-asc' ? 'selected' : '' %>>A - Z</option>
              <option value="name-desc" <%= sort === 'name-desc' ? 'selected' : '' %>>Z - A</option>
              <option value="popularity" <%= sort === 'popularity' ? 'selected' : '' %>>Popularity</option>
              <option value="ratings" <%= sort === 'ratings' ? 'selected' : '' %>>Average Ratings</option>
              <option value="new-arrivals" <%= sort === 'new-arrivals' ? 'selected' : '' %>>New Arrivals</option>
              <option value="featured" <%= sort === 'featured' ? 'selected' : '' %>>Featured</option>
            </select>
            <input type="hidden" name="page" value="<%= currentPage %>">
            <input type="hidden" name="query" value="<%= query || '' %>">
            <input type="hidden" name="price" value="<%= price || '' %>">
            <input type="hidden" name="category" value="<%= selectedCategory || '' %>">
          </form>
        </div>
      </div>

      <div class="product-list-container">
        <aside class="sidebar">
          <div class="filter-section">
            <div class="filter-title">Categories</div>
            <div class="category-brand-container">
                <ul>
                    <% category.forEach(cat => { %>
                        <li class="filter-item">
                            <a href="/loadShoppingPage?category=<%= cat._id %>&sort=<%= sort %>&query=<%= query %>&price=<%= price %>"
                               class="<%= selectedCategory === cat._id.toString() ? 'active' : '' %>">
                                <%= cat.name %>
                            </a>
                        </li>
                    <% }) %>
                </ul>
            </div>
          </div>
          <div class="price-filter">
            <div class="filter-title">Filter by Price</div>
            <div class="price-options">
              <a href="/loadShoppingPage?price=under-500&sort=<%= sort %>&query=<%= query %>&category=<%= selectedCategory %>">
                <button type="button" class="price-button <%= price === 'under-500' ? 'active' : '' %>">Under ₹500</button>
              </a>
              <a href="/loadShoppingPage?price=500-1000&sort=<%= sort %>&query=<%= query %>&category=<%= selectedCategory %>">
                <button type="button" class="price-button <%= price === '500-1000' ? 'active' : '' %>">₹500 - ₹1000</button>
              </a>
              <a href="/loadShoppingPage?price=1000-1500&sort=<%= sort %>&query=<%= query %>&category=<%= selectedCategory %>">
                <button type="button" class="price-button <%= price === '1000-1500' ? 'active' : '' %>">₹1000 - ₹1500</button>
              </a>
              <a href="/loadShoppingPage?price=above-1500&sort=<%= sort %>&query=<%= query %>&category=<%= selectedCategory %>">
                <button type="button" class="price-button <%= price === 'above-1500' ? 'active' : '' %>">Above ₹1500</button>
              </a>
            </div>
          </div>
        </aside>

        <main class="product-grid">
          <% if (products.length === 0) { %>
            <p>No products found.</p>
          <% } else { %>
            <% products.forEach(product => { %>
              <div class="product-card">
                <% if (product.totalOffer > 0) { %>
                  <span class="offer-badge"><%= product.totalOffer %>% OFF (<%= product.offerType === 'category' ? 'Category' : 'Product' %>)</span>
                <% } %>
                <span class="wishlist-btn <%= wishlistItems && wishlistItems.products.some(item => item.productId.toString() === product._id.toString()) ? 'added-to-wishlist' : '' %>" 
                      onclick="toggleWishlist('<%= product._id %>')"
                      data-product-id="<%= product._id %>"
                      data-in-wishlist="<%= wishlistItems && wishlistItems.products.some(item => item.productId.toString() === product._id.toString()) ? 'true' : 'false' %>"
                      style="cursor: pointer; font-size: 1.2rem;">
                      <i class="<%= wishlistItems && wishlistItems.products.some(item => item.productId.toString() === product._id.toString()) ? 'fas fa-heart' : 'far fa-heart' %>"></i>
                </span>
                <a href="/productDetails/<%= product._id %>">
                  <img src="<%= product.productImage[0] || '/default-image.jpg' %>" alt="<%= product.productName %>">
                  <h4 class="product-name">
                    <%= product.productName %>
                  </h4>
                  <p class="product-description">
                    <% let maxLength = 100; let desc = product.description; if (desc.length > maxLength) { desc = desc.substring(0, maxLength) + '...'; } %>
                    <%= desc %>
                  </p>
                  <p>
                    <% if (product.totalOffer > 0) { %>
                      Price: ₹<%= product.discountedPrice %>
                      <span class="text-muted">
                        <strike>₹<%= product.regularPrice.toLocaleString('en-IN') %></strike>
                      </span>
                    <% } else { %>
                      Price: ₹<%= product.regularPrice.toLocaleString('en-IN') %>
                    <% } %>
                  </p>
                  <p class="stock-status <%= product.status === 'out of stock' ? 'out-of-stock' : 'available' %>">
                    <%= product.status === 'out of stock' ? 'Out of Stock' : 'In Stock' %>
                  </p>
                </a>
                <div class="button-group">
                  <button class="add-to-cart-btn" 
                    onclick="addToCart('<%= product._id %>')" 
                    <%= product.status === 'out of stock' ? 'disabled' : '' %>>
                    <%= product.status === 'out of stock' ? 'Out of Stock' : 'Add to Cart' %>
                  </button>
                  <!-- <button class="buy-now-btn" 
                    onclick="buyNow('<%= product._id %>')" 
                    <%= product.status === 'out of stock' ? 'disabled' : '' %>>
                    <%= product.status === 'out of stock' ? 'Out of Stock' : 'Buy Now' %>
                  </button> -->
                </div>
              </div>
            <% }) %>
          <% } %>
        </main>
      </div>

      <div class="pagination">
        <% if (currentPage > 1) { %>
          <a href="/loadShoppingPage?page=<%= currentPage - 1 %>&sort=<%= sort %>&query=<%= query %>&price=<%= price %>&category=<%= selectedCategory %>">Previous</a>
        <% } %>
        <% for (let i = 1; i <= totalPages; i++) { %>
          <a href="/loadShoppingPage?page=<%= i %>&sort=<%= sort %>&query=<%= query %>&price=<%= price %>&category=<%= selectedCategory %>" class="<%= currentPage === i ? 'active' : '' %>">
            <%= i %>
          </a>
        <% } %>
        <% if (currentPage < totalPages) { %>
          <a href="/loadShoppingPage?page=<%= currentPage + 1 %>&sort=<%= sort %>&query=<%= query %>&price=<%= price %>&category=<%= selectedCategory %>">Next</a>
        <% } %>
      </div>
    </section>
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
async function toggleWishlist(productId) {
    try {
        const heartBtn = document.querySelector(`[data-product-id="${productId}"]`);
        const isInWishlist = heartBtn.dataset.inWishlist === 'true';

        if (isInWishlist) {
            // Remove from wishlist
            const response = await fetch('/wishlist/remove', {
                method: 'POST', // Matches updated route
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ productId }),
                credentials: 'include'
            });

            if (!response.ok) {
                const text = await response.text();
                console.error('Remove from wishlist failed:', response.status, text);
                let errorData;
                try {
                    errorData = JSON.parse(text);
                } catch {
                    throw new Error('Server returned non-JSON response: ' + text.substring(0, 100));
                }
                throw new Error(errorData.error || `Failed to remove from wishlist (Status: ${response.status})`);
            }

            const result = await response.json();

            heartBtn.classList.remove('added-to-wishlist');
            heartBtn.innerHTML = '<i class="far fa-heart"></i>';
            heartBtn.dataset.inWishlist = 'false';

            Swal.fire({
                title: 'Removed from Wishlist!',
                icon: 'success',
                confirmButtonText: 'OK',
                buttonsStyling: false,
                customClass: {
                    confirmButton: 'bg-blue-500 hover:bg-blue-600 text-white font-medium py-2 px-4 rounded'
                }
            });
        } else {
            // Add to wishlist
            const response = await fetch('/wishlist/add', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ productId }),
                credentials: 'include'
            });

            if (!response.ok) {
                const text = await response.text();
                console.error('Add to wishlist failed:', response.status, text);
                let errorData;
                try {
                    errorData = JSON.parse(text);
                } catch {
                    throw new Error('Server returned non-JSON response: ' + text.substring(0, 100));
                }
                if (errorData.loginUrl) {
                    window.location.href = errorData.loginUrl;
                    return;
                }
                throw new Error(errorData.error || `Failed to add to wishlist (Status: ${response.status})`);
            }

            const result = await response.json();

            heartBtn.classList.add('added-to-wishlist');
            heartBtn.innerHTML = '<i class="fas fa-heart"></i>';
            heartBtn.dataset.inWishlist = 'true';

            Swal.fire({
                title: 'Added to Wishlist!',
                icon: 'success',
                showCancelButton: true,
                confirmButtonText: 'View Wishlist',
                cancelButtonText: 'Continue Shopping',
                buttonsStyling: false,
                customClass: {
                    confirmButton: 'bg-blue-500 hover:bg-blue-600 text-white font-medium py-2 px-4 rounded mr-2',
                    cancelButton: 'bg-gray-200 hover:bg-gray-300 text-gray-800 font-medium py-2 px-4 rounded'
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = '/profile/wishlist';
                }
            });
        }
    } catch (error) {
        console.error('Wishlist toggle error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: error.message,
        });
    }
}

async function addToCart(productId) {
    try {
        const response = await fetch(`/cart/add/${productId}`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            credentials: 'include'
        });

        if (!response.ok) {
            const errorData = await response.json();
            throw new Error(errorData.message || 'Failed to add to cart');
        }

        const result = await response.json();

        if (result.success) {
            const cartCountElement = document.querySelector('.cart-count');
            if (cartCountElement) {
                cartCountElement.textContent = result.cartCount;
            }

            Swal.fire({
                title: 'Added to Cart!',
                text: result.message || 'Product has been added to your cart',
                icon: 'success',
                showCancelButton: true,
                confirmButtonColor: '#1e918b',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'View Cart',
                cancelButtonText: 'Continue Shopping'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = '/profile/cart';
                }
            });
        }
    } catch (error) {
        console.error('Error adding to cart:', error);
        Swal.fire({
            title: 'Error!',
            text: error.message || 'An error occurred while adding to cart',
            icon: 'error',
            confirmButtonText: 'OK'
        });
    }
}
</script>
<%- include("../../views/partials/user/footer") %>