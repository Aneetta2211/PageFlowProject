
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin - Order Management</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
        body { display: flex; min-height: 100vh; }
        .sidebar {
            width: 250px;
            background-color: #343a40;
            color: white;
            height: 100vh;
            position: fixed;
            left: 0;
            top: 0;
        }

        .sidebar h2 {
            margin: 0;
            padding: 20px 10px;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }

        .sidebar ul {
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .sidebar ul li {
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }

        .sidebar ul li a {
            padding: 15px 20px;
            display: block;
            color: rgba(255, 255, 255, 0.8);
            text-decoration: none;
            transition: all 0.3s;
        }

        .sidebar ul li a:hover,
        .sidebar ul li a.active {
            background-color: rgba(255, 255, 255, 0.1);
            color: #fff;
        }

        .sidebar ul li a i {
            margin-right: 10px;
            width: 20px;
            text-align: center;
        }

        .content { 
            margin-left: 250px;
             padding: 20px; 
             width: 100%; 
            }
        .table-responsive { 
            margin-top: 20px;
         }
        .modal-body table { 
            width: 100%; 
        }
        .filter-section {
             margin-bottom: 20px; 
            }
    </style>
</head>
<body>
    <div class="sidebar">
        <h2 class="text-center p-3">Admin</h2>
        <ul>
            <li><a href="/admin"><i class="fa fa-tachometer-alt"></i> Dashboard</a></li>
            <li><a href="/admin/customers"><i class="fa fa-users"></i> Customers</a></li>
            <li><a href="/admin/category"><i class="fa fa-th-large"></i> Category</a></li>
            <li><a href="/admin/add-product"><i class="fa fa-plus"></i> Add Products</a></li>
            <li><a href="/admin/products"><i class="fa fa-box"></i> Products</a></li>
            <li><a href="/admin/orders" class="active"><i class="fa fa-shopping-cart"></i> Orders</a></li>
        </ul>
    </div>

    <div class="content">
        <h1>Order Management</h1>

        <!-- Search, Sort, and Filter -->
        <div class="filter-section">
            <div class="row">
                <div class="col-md-4">
                    <input type="text" id="searchInput" class="form-control" placeholder="Search by Order ID or User">
                </div>
                <div class="col-md-3">
                    <select id="sortSelect" class="form-select">
                        <option value="date-desc">Sort by Date (Desc)</option>
                        <option value="date-asc">Sort by Date (Asc)</option>
                        <option value="id-asc">Sort by Order ID (Asc)</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <select id="filterStatus" class="form-select">
                        <option value="">All Statuses</option>
                        <option value="Pending">Pending</option>
                        <option value="Shipped">Shipped</option>
                        <option value="Out for Delivery">Out for Delivery</option>
                        <option value="Delivered">Delivered</option>
                        <option value="Cancelled">Cancelled</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <button id="clearSearch" class="btn btn-secondary">Clear</button>
                </div>
            </div>
        </div>

        <!-- Orders Table -->
        <div class="table-responsive">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Order ID</th>
                        <th>Date</th>
                        <th>User</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="orderTable">
                    <% orders.forEach(order => { %>
                        <tr>
                            <td><%= order.orderId %></td>
                            <td><%= new Date(order.orderDate).toLocaleDateString() %></td>
                            <td><%= order.user.name %> (<%= order.user.email %>)</td>
                            <td>
                                <select class="form-select status-select" data-order-id="<%= order.orderId %>">
                                    <option value="Pending" <%= order.status === 'Pending' ? 'selected' : '' %>>Pending</option>
                                    <option value="Shipped" <%= order.status === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                                    <option value="Out for Delivery" <%= order.status === 'Out for Delivery' ? 'selected' : '' %>>Out for Delivery</option>
                                    <option value="Delivered" <%= order.status === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                                    <option value="Cancelled" <%= order.status === 'Cancelled' ? 'selected' : '' %>>Cancelled</option>
                                </select>
                            </td>
                            <td>
                                <button class="btn btn-info btn-sm view-order" data-order-id="<%= order.orderId %>">View</button>
                                <% if (order.returnRequested) { %>
                                    <button class="btn btn-warning btn-sm verify-return" data-order-id="<%= order.orderId %>">Verify Return</button>
                                <% } %>
                            </td>
                        </tr>
                    <% }) %>
                </tbody>
            </table>
        </div>

        <!-- Pagination -->
        <nav>
            <ul class="pagination">
                <% for (let i = 1; i <= totalPages; i++) { %>
                    <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                        <a class="page-link" href="/admin/orders?page=<%= i %>"><%= i %></a>
                    </li>
                <% } %>
            </ul>
        </nav>

        <!-- Inventory Overview -->
        <h2>Inventory Overview</h2>
        <div class="table-responsive">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Product ID</th>
                        <th>Product Name</th>
                        <th>Stock Quantity</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% products.forEach(product => { %>
                        <tr>
                            <td><%= product.productId %></td>
                            <td><%= product.name %></td>
                            <td><%= product.stock %></td>
                            <td>
                                <button class="btn btn-primary btn-sm update-stock" data-product-id="<%= product.productId %>">Update Stock</button>
                            </td>
                        </tr>
                    <% }) %>
                </tbody>
            </table>
        </div>
    </div>

    <!-- Order Details Modal -->
    <div class="modal fade" id="orderModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Order Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body" id="orderDetails">
                    <!-- Populated dynamically -->
                </div>
            </div>
        </div>
    </div>

    <!-- Return Verification Modal -->
    <div class="modal fade" id="returnModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Verify Return Request</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <p>Order ID: <span id="returnOrderId"></span></p>
                    <p>Reason: <span id="returnReason"></span></p>
                    <div class="mb-3">
                        <label class="form-label">Verification Status</label>
                        <select id="returnStatus" class="form-select">
                            <option value="Accepted">Accept</option>
                            <option value="Rejected">Reject</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="submitReturn">Submit</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Search functionality
        document.getElementById('searchInput').addEventListener('input', function() {
            const search = this.value.toLowerCase();
            const rows = document.querySelectorAll('#orderTable tr');
            rows.forEach(row => {
                const orderId = row.cells[0].textContent.toLowerCase();
                const user = row.cells[2].textContent.toLowerCase();
                row.style.display = orderId.includes(search) || user.includes(search) ? '' : 'none';
            });
        });

        // Clear search
        document.getElementById('clearSearch').addEventListener('click', function() {
            document.getElementById('searchInput').value = '';
            document.getElementById('filterStatus').value = '';
            document.getElementById('sortSelect').value = 'date-desc';
            const rows = document.querySelectorAll('#orderTable tr');
            rows.forEach(row => row.style.display = '');
            // Reload page to reset sorting
            window.location.href = '/admin/orders';
        });

        // Filter by status
        document.getElementById('filterStatus').addEventListener('change', function() {
            const status = this.value;
            const rows = document.querySelectorAll('#orderTable tr');
            rows.forEach(row => {
                const rowStatus = row.cells[3].querySelector('select').value;
                row.style.display = status === '' || rowStatus === status ? '' : 'none';
            });
        });

        // Sort functionality
        document.getElementById('sortSelect').addEventListener('change', function() {
            const value = this.value;
            const tbody = document.getElementById('orderTable');
            const rows = Array.from(tbody.querySelectorAll('tr'));

            rows.sort((a, b) => {
                if (value === 'date-asc') {
                    return new Date(a.cells[1].textContent) - new Date(b.cells[1].textContent);
                } else if (value === 'date-desc') {
                    return new Date(b.cells[1].textContent) - new Date(a.cells[1].textContent);
                } else if (value === 'id-asc') {
                    return a.cells[0].textContent.localeCompare(b.cells[0].textContent);
                }
            });

            tbody.innerHTML = '';
            rows.forEach(row => tbody.appendChild(row));
        });

        // Update order status
        document.querySelectorAll('.status-select').forEach(select => {
            select.addEventListener('change', async function() {
                const orderId = this.dataset.orderId;
                const status = this.value;
                await fetch('/admin/orders/update-status', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ orderId, status })
                });
            });
        });

        // View order details
        document.querySelectorAll('.view-order').forEach(button => {
            button.addEventListener('click', async function() {
                const orderId = this.dataset.orderId;
                const response = await fetch(`/admin/orders/details/${orderId}`);
                const order = await response.json();
                document.getElementById('orderDetails').innerHTML = `
                    <table class="table">
                        <tr><th>Order ID</th><td>${order.orderId}</td></tr>
                        <tr><th>User</th><td>${order.user.name} (${order.user.email})</td></tr>
                        <tr><th>Date</th><td>${new Date(order.orderDate).toLocaleString()}</td></tr>
                        <tr><th>Status</th><td>${order.status}</td></tr>
                        <tr><th>Items</th><td>
                            <ul>${order.items.map(item => `<li>${item.product.name} - Qty: ${item.quantity} - $${item.price}</li>`).join('')}</ul>
                        </td></tr>
                        <tr><th>Total</th><td>$${order.total}</td></tr>
                    </table>
                `;
                new bootstrap.Modal(document.getElementById('orderModal')).show();
            });
        });

        // Verify return request
        document.querySelectorAll('.verify-return').forEach(button => {
            button.addEventListener('click', async function() {
                const orderId = this.dataset.orderId;
                const response = await fetch(`/admin/orders/return-details/${orderId}`);
                const returnData = await response.json();
                document.getElementById('returnOrderId').textContent = orderId;
                document.getElementById('returnReason').textContent = returnData.reason;
                document.getElementById('submitReturn').dataset.orderId = orderId;
                new bootstrap.Modal(document.getElementById('returnModal')).show();
            });
        });

        // Submit return verification
        document.getElementById('submitReturn').addEventListener('click', async function() {
            const orderId = this.dataset.orderId;
            const status = document.getElementById('returnStatus').value;
            await fetch('/admin/orders/verify-return', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ orderId, status })
            });
            bootstrap.Modal.getInstance(document.getElementById('returnModal')).hide();
            window.location.reload();
        });

        // Update stock (placeholder for modal or form)
        document.querySelectorAll('.update-stock').forEach(button => {
            button.addEventListener('click', function() {
                const productId = this.dataset.productId;
                const newStock = prompt('Enter new stock quantity:');
                if (newStock !== null && !isNaN(newStock)) {
                    fetch('/admin/products/update-stock', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ productId, stock: parseInt(newStock) })
                    }).then(() => window.location.reload());
                }
            });
        });
    </script>
</body>
</html>