<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Category Management</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css">
    <style>
        body { background-color: #f8f9fa; }
        .custom-navbar { background-color: #f8f9fa; color: white; }
        .custom-navbar .navbar-brand { color: white; font-size: 1.5rem; }
        .custom-navbar .btn-danger { font-size: 0.9rem; }
        .sidebar { width: 250px; background-color: #343a40; color: white; height: 100vh; position: fixed; left: 0; top: 0; }
        .sidebar h2 { margin: 0; padding: 20px 10px; border-bottom: 1px solid rgba(255, 255, 255, 0.1); }
        .sidebar ul { list-style: none; padding: 0; margin: 0; }
        .sidebar ul li { border-bottom: 1px solid rgba(255, 255, 255, 0.1); }
        .sidebar ul li a { padding: 15px 20px; display: block; color: rgba(255, 255, 255, 0.8); text-decoration: none; transition: all 0.3s; }
        .sidebar ul li a:hover, .sidebar ul li a.active { background-color: rgba(255, 255, 255, 0.1); color: #fff; }
        .sidebar ul li a i { margin-right: 10px; width: 20px; text-align: center; }
        .content { margin-left: 260px; padding: 20px; }
        .pagination {
            display: flex;
            justify-content: center;
            margin: 20px 0;
        }
        .pagination a {
            color: black;
            padding: 8px 16px;
            text-decoration: none;
            border: 1px solid #ddd;
            margin: 0 4px;
        }
        .pagination a.active {
            background-color: #4CAF50;
            color: white;
            border: 1px solid #4CAF50;
        }
        .pagination a:hover:not(.active) {
            background-color: #ddd;
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg custom-navbar shadow-sm">
        <div class="container-fluid">
            <span class="navbar-brand">Dashboard</span>
            <div>
                <a href="/admin/logout" class="btn btn-danger">Logout</a>
            </div>
        </div>
    </nav>

    <div class="sidebar">
        <h2 class="text-center p-3">Admin</h2>
        <ul>
            <li><a href="/admin"><i class="fa fa-tachometer-alt"></i> Dashboard</a></li>
            <li><a href="/admin/customers"><i class="fa fa-users"></i> Customers</a></li>
            <li><a href="/admin/category" class="active"><i class="fa fa-th-large"></i> Category</a></li>
            <li><a href="/admin/add-product"><i class="fa fa-plus"></i> Add Products</a></li>
            <li><a href="/admin/products"><i class="fa fa-box"></i> Products</a></li>
            <li><a href="/admin/orders"><i class="fa fa-shopping-cart"></i> Orders</a></li>
             <li><a href="/admin/coupons"><i class="fa fa-tag"></i> Coupons</a></li>
             <li><a href="/admin/wallet"><i class="fa fa-wallet"></i> Wallet</a></li>
        </ul>
    </div>

    <div class="content">
        <h2>Category</h2>
        <div class="card p-4">
            <form id="categoryForm">
                <div class="mb-3">
                    <label for="categoryName" class="form-label">Name</label>
                    <input type="text" class="form-control" id="categoryName" placeholder="Enter category name" required>
                </div>
                <div class="mb-3">
                    <label for="categoryDescription" class="form-label">Description</label>
                    <textarea class="form-control" id="categoryDescription" placeholder="Enter description" required></textarea>
                </div>
                <button type="submit" class="btn btn-success">Create Category</button>
                <button type="button" id="clearForm" class="btn btn-secondary">Clear</button>
            </form>
        </div>

        <div class="d-flex justify-content-start align-items-center mb-3" style="max-width: 500px; position: relative;">
            <input type="text" id="searchInput" class="form-control shadow-sm rounded-pill ps-5"
                placeholder="Search category..." value="<%= searchQuery || '' %>"
                style="height: 45px; border: 1px solid #ced4da;">
            <i class="fas fa-search position-absolute"
                style="left: 15px; top: 50%; transform: translateY(-50%); color: gray;"></i>
            <button id="searchButton" class="btn btn-primary rounded-pill ms-2 px-4" style="height: 45px;">
                Search
            </button>
            <button id="clearSearch" class="btn btn-outline-secondary rounded-pill ms-2 px-4" style="height: 45px;">
                Clear
            </button>
        </div>

        <table class="table mt-4" id="categoryTable">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Offer Price</th>
                    <th>Offer</th>
                    <th>Status</th>
                    <th>List/Unlist</th>
                    <th>Edit</th>
                </tr>
            </thead>
            <tbody>
                <% if (categories.length > 0) { %>
                    <% categories.forEach(category => { %>
                        <tr>
                            <td><%= category.name %></td>
                            <td><%= category.description %></td>
                            <td id="offer-price-<%= category._id %>"><%= category.categoryOffer %>%</td>
                            <td>
                                <% if (category.categoryOffer > 0) { %>
                                    <button class="btn btn-warning remove-offer-btn" 
                                            data-category-id="<%= category._id %>"
                                            onclick="removeOffer('<%= category._id %>')">
                                        Remove
                                    </button>
                                <% } else { %>
                                    <button class="btn btn-info add-offer-btn" 
                                            data-bs-toggle="modal" 
                                            data-bs-target="#offerModal"
                                            data-category-id="<%= category._id %>"
                                            onclick="setCategoryId('<%= category._id %>')">
                                        Add Offer
                                    </button>
                                <% } %>
                            </td>
                            <td>
                                <span id="status-<%= category._id %>" class="badge <%= category.isListed ? 'bg-success' : 'bg-danger' %>">
                                    <%= category.isListed ? 'Listed' : 'Unlisted' %>
                                </span>
                            </td>
                            <td>
                                <button id="toggle-<%= category._id %>" class="btn <%= category.isListed ? 'btn-danger' : 'btn-success' %>"
                                    onclick="toggleList('<%= category._id %>')">
                                    <%= category.isListed ? 'Unlist' : 'List' %>
                                </button>
                            </td>
                            <td>
                                <a href="/admin/category/edit/<%= category._id %>" class="btn btn-primary">Edit</a>
                            </td>
                        </tr>
                    <% }) %>
                <% } else { %>
                    <tr>
                        <td colspan="7" class="text-center">No categories found</td>
                    </tr>
                <% } %>
            </tbody>
        </table>

        <% if (totalPages > 1) { %>
            <div class="pagination">
                <% if (currentPage > 1) { %>
                    <a href="?page=<%= currentPage-1 %>&search=<%= searchQuery %>">«</a>
                <% } %>
                <% for(let i=1; i <= totalPages; i++) { %>
                    <a href="?page=<%= i %>&search=<%= searchQuery %>" class="<%= i === currentPage ? 'active' : '' %>"><%= i %></a>
                <% } %>
                <% if (currentPage < totalPages) { %>
                    <a href="?page=<%= currentPage+1 %>&search=<%= searchQuery %>">»</a>
                <% } %>
            </div>
        <% } %>

       <div class="modal fade" id="offerModal" tabindex="-1" aria-labelledby="offerModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="offerModalLabel">Add Offer</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="offerForm">
                    <div class="mb-3">
                        <label for="offerPercentage" class="form-label">Offer Percentage (%)</label>
                        <input type="number" class="form-control" id="offerPercentage" min="0" max="100"
                            placeholder="Enter offer percentage (0-100)" required>
                        <div id="offer-error" class="text-danger mt-2" style="display: none;"></div>
                    </div>
                    <input type="hidden" id="categoryId">
                    <button type="submit" class="btn btn-primary">Save Offer</button>
                </form>
            </div>
        </div>
    </div>
</div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
    <script>
        // Category creation
        document.getElementById("categoryForm").addEventListener("submit", async function (e) {
            e.preventDefault();
            const name = document.getElementById("categoryName").value.trim();
            const description = document.getElementById("categoryDescription").value.trim();

            try {
                const response = await fetch("/admin/category/add", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ name, description })
                });
                const data = await response.json();
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: 'Category added successfully!',
                        confirmButtonText: 'OK'
                    }).then(() => {
                        window.location.reload();
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message || 'Error adding category',
                        confirmButtonText: 'OK'
                    });
                }
            } catch (error) {
                console.error("Error adding category:", error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Error adding category',
                    confirmButtonText: 'OK'
                });
            }
        });

        // Clear form
        document.getElementById('clearForm').addEventListener('click', function () {
            document.getElementById('categoryForm').reset();
        });

        // Set category ID for offer modal
        function setCategoryId(id) {
            document.getElementById('categoryId').value = id;
            document.getElementById('offerForm').reset();
            document.getElementById('offer-error').style.display = 'none';
        }

        // Add offer
        document.getElementById('offerForm').addEventListener('submit', async function (e) {
            e.preventDefault();
            const offerPercentage = parseInt(document.getElementById('offerPercentage').value);
            const categoryId = document.getElementById('categoryId').value;
            const errorDiv = document.getElementById('offer-error');

            // Validate offer percentage
            if (isNaN(offerPercentage) || offerPercentage < 0 || offerPercentage > 100) {
                errorDiv.textContent = 'Offer percentage must be between 0 and 100';
                errorDiv.style.display = 'block';
                return;
            }

            try {
                const response = await fetch('/admin/category/add-offer', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ categoryId, offerPercentage })
                });
                const data = await response.json();
                if (data.success) {
                    const offerCell = document.getElementById(`offer-price-${categoryId}`);
                    offerCell.textContent = `${data.offer}%`;
                    const buttonCell = offerCell.nextElementSibling;
                    buttonCell.innerHTML = `
                        <button class="btn btn-warning remove-offer-btn" 
                                data-category-id="${categoryId}"
                                onclick="removeOffer('${categoryId}')">
                            Remove
                        </button>
                    `;
                    const modal = bootstrap.Modal.getInstance(document.getElementById('offerModal'));
                    modal.hide();
                    document.getElementById('offerForm').reset();
                    errorDiv.style.display = 'none';
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: 'Offer added successfully!',
                        confirmButtonText: 'OK'
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message || 'Error adding offer',
                        confirmButtonText: 'OK'
                    });
                }
            } catch (error) {
                console.error("Error adding offer:", error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Error adding offer',
                    confirmButtonText: 'OK'
                });
            }
        });

        // Remove offer
        async function removeOffer(categoryId) {
            try {
                const response = await fetch('/admin/category/remove-offer', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ categoryId })
                });
                const data = await response.json();
                if (data.success) {
                    const offerCell = document.getElementById(`offer-price-${categoryId}`);
                    offerCell.textContent = '0%';
                    const buttonCell = offerCell.nextElementSibling;
                    buttonCell.innerHTML = `
                        <button class="btn btn-info add-offer-btn" 
                                data-bs-toggle="modal" 
                                data-bs-target="#offerModal" 
                                data-category-id="${categoryId}"
                                onclick="setCategoryId('${categoryId}')">
                            Add Offer
                        </button>
                    `;
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: 'Offer removed successfully!',
                        confirmButtonText: 'OK'
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message || 'Error removing offer',
                        confirmButtonText: 'OK'
                    });
                }
            } catch (error) {
                console.error("Error removing offer:", error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Error removing offer',
                    confirmButtonText: 'OK'
                });
            }
        }

        // Toggle list/unlist
        async function toggleList(id) {
            const toggleBtn = document.getElementById(`toggle-${id}`);
            const statusSpan = document.getElementById(`status-${id}`);
            const isUnlisting = toggleBtn.textContent === 'Unlist';

            const result = await Swal.fire({
                title: `Are you sure?`,
                text: `This will ${isUnlisting ? 'unlist' : 'list'} the category!`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: `Yes, ${isUnlisting ? 'unlist' : 'list'} it!`,
                cancelButtonText: 'No, cancel'
            });

            if (result.isConfirmed) {
                try {
                    const endpoint = isUnlisting ? `/admin/category/unlist/${id}` : `/admin/category/list/${id}`;
                    const response = await fetch(endpoint, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' }
                    });
                    const data = await response.json();
                    if (data.success) {
                        toggleBtn.textContent = isUnlisting ? 'List' : 'Unlist';
                        toggleBtn.classList.toggle('btn-danger', !isUnlisting);
                        toggleBtn.classList.toggle('btn-success', isUnlisting);
                        statusSpan.textContent = isUnlisting ? 'Unlisted' : 'Listed';
                        statusSpan.classList.toggle('bg-success', !isUnlisting);
                        statusSpan.classList.toggle('bg-danger', isUnlisting);
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: `Category ${isUnlisting ? 'unlisted' : 'listed'} successfully!`,
                            confirmButtonText: 'OK'
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: `Error ${isUnlisting ? 'unlisting' : 'listing'} category`,
                            confirmButtonText: 'OK'
                        });
                    }
                } catch (error) {
                    console.error(`Error ${isUnlisting ? 'unlisting' : 'listing'} category:`, error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: `Error ${isUnlisting ? 'unlisting' : 'listing'} category`,
                        confirmButtonText: 'OK'
                    });
                }
            }
        }

        // Search and Clear
        document.addEventListener("DOMContentLoaded", function () {
            const searchButton = document.getElementById("searchButton");
            const clearSearch = document.getElementById("clearSearch");
            const searchInput = document.getElementById("searchInput");

            if (searchButton && clearSearch && searchInput) {
                searchButton.addEventListener("click", function () {
                    const query = searchInput.value.trim();
                    if (query) {
                        window.location.href = `/admin/category?search=${encodeURIComponent(query)}`;
                    }
                });

                clearSearch.addEventListener("click", function () {
                    searchInput.value = "";
                    window.location.href = `/admin/category?clear=true`;
                });
            }
        });
    </script>
</body>
</html>