<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Coupon Management</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css">
    <style>
        body { background-color: #f8f9fa; }
        .custom-navbar { background-color: #f8f9fa; color: white; }
        .custom-navbar .navbar-brand { color: white; font-size: 1.5rem; }
        .custom-navbar .btn-danger { font-size: 0.9rem; }
        .sidebar { width: 250px; background-color: #343a40; color: white; height: 100vh; position: fixed; left: 0; top: 0; }
        .sidebar h2 { margin: 0; padding: 20px 10px; border-bottom: 1px solid rgba(255, 255, 255, 0.1); }
        .sidebar ul { list-style: none; padding: 0; margin: 0; }
        .sidebar ul li { border-bottom: 1px solid rgba(255, 255, 255, 0.1); }
        .sidebar ul li a { padding: 15px 20px; display: block; color: rgba(255, 255, 255, 0.8); text-decoration: none; transition: all 0.3s; }
        .sidebar ul li a:hover, .sidebar ul li a.active { background-color: rgba(255, 255, 255, 0.1); color: #fff; }
        .sidebar ul li a i { margin-right: 10px; width: 20px; text-align: center; }
        .content { margin-left: 260px; padding: 20px; }
        .pagination {
            display: flex;
            justify-content: center;
            margin: 20px 0;
        }
        .pagination a {
            color: black;
            padding: 8px 16px;
            text-decoration: none;
            border: 1px solid #ddd;
            margin: 0 4px;
        }
        .pagination a.active {
            background-color: #4CAF50;
            color: white;
            border: 1px solid #4CAF50;
        }
        .pagination a:hover:not(.active) {
            background-color: #ddd;
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg custom-navbar shadow-sm">
        <div class="container-fluid">
            <span class="navbar-brand">Dashboard</span>
            <div>
                <a href="/admin/logout" class="btn btn-danger">Logout</a>
            </div>
        </div>
    </nav>

    <div class="sidebar">
        <h2 class="text-center p-3">Admin</h2>
        <ul>
            <li><a href="/admin"><i class="fa fa-tachometer-alt"></i> Dashboard</a></li>
            <li><a href="/admin/customers"><i class="fa fa-users"></i> Customers</a></li>
            <li><a href="/admin/category"><i class="fa fa-th-large"></i> Category</a></li>
            <li><a href="/admin/add-product"><i class="fa fa-plus"></i> Add Products</a></li>
            <li><a href="/admin/products"><i class="fa fa-box"></i> Products</a></li>
            <li><a href="/admin/orders"><i class="fa fa-shopping-cart"></i> Orders</a></li>
            <li><a href="/admin/coupons" class="active"><i class="fa fa-ticket-alt"></i> Coupons</a></li>
        </ul>
    </div>

    <div class="content">
        <h2>Coupons</h2>
        <div class="card p-4">
            <form id="couponForm">
                <div class="mb-3">
                    <label for="isActive" class="form-label">Status</label>
                    <select class="form-control" id="isActive" required>
                        <option value="true">Active</option>
                        <option value="false">Inactive</option>
                    </select>
                </div>
                <div class="mb-3">
                    <label for="couponCode" class="form-label">Coupon Code</label>
                    <input type="text" class="form-control" id="couponCode" placeholder="Enter coupon code" required>
                </div>
                <div class="mb-3">
                    <label for="discountType" class="form-label">Discount Type</label>
                    <select class="form-control" id="discountType" required>
                        <option value="percentage">Percentage</option>
                        <option value="fixed">Fixed Amount</option>
                    </select>
                </div>
                <div class="mb-3">
                    <label for="discount" class="form-label">Discount</label>
                    <input type="number" class="form-control" id="discount" placeholder="Enter discount (e.g., 10 for 10% or ₹10)" min="0" required>
                </div>
                <div class="mb-3">
                    <label for="minPurchase" class="form-label">Minimum Purchase (₹)</label>
                    <input type="number" class="form-control" id="minPurchase" placeholder="Enter minimum purchase amount" min="0">
                </div>
                <div class="mb-3">
                    <label for="maxDiscount" class="form-label">Maximum Discount (₹)</label>
                    <input type="number" class="form-control" id="maxDiscount" placeholder="Enter maximum discount amount" min="0">
                </div>
                <div class="mb-3">
                    <label for="expiryDate" class="form-label">Expiry Date</label>
                    <input type="date" class="form-control" id="expiryDate" required>
                </div>
                <button type="submit" class="btn btn-success">Create Coupon</button>
                <button type="button" id="clearForm" class="btn btn-secondary">Clear</button>
            </form>
        </div>

        <div class="d-flex justify-content-start align-items-center mb-3" style="max-width: 500px; position: relative;">
            <input type="text" id="searchInput" class="form-control shadow-sm rounded-pill ps-5"
                placeholder="Search coupons..." value="<%= searchQuery || '' %>"
                style="height: 45px; border: 1px solid #ced4da;">
            <i class="fas fa-search position-absolute"
                style="left: 15px; top: 50%; transform: translateY(-50%); color: gray;"></i>
            <button id="searchButton" class="btn btn-primary rounded-pill ms-2 px-4" style="height: 45px;">
                Search
            </button>
            <button id="clearSearch" class="btn btn-outline-secondary rounded-pill ms-2 px-4" style="height: 45px;">
                Clear
            </button>
        </div>

        <table class="table mt-4" id="couponTable">
            <thead>
                <tr>
                    <th>Code</th>
                    <th>Discount</th>
                    <th>Min Purchase</th>
                    <th>Max Discount</th>
                    <th>Expiry Date</th>
                    <th>Status</th>
                    <th>Toggle</th>
                    <th>Edit</th>
                    <th>Delete</th>
                </tr>
            </thead>
            <tbody>
                <% if (coupons.length > 0) { %>
                    <% coupons.forEach(coupon => { %>
                        <tr>
                            <td><%= coupon.code %></td>
                            <td><%= coupon.discountType === 'percentage' ? `${coupon.discount}%` : `₹${coupon.discount}` %></td>
                            <td>₹<%= coupon.minPurchase || 0 %></td>
                            <td><%= coupon.maxDiscount ? `₹${coupon.maxDiscount}` : '-' %></td>
                            <td><%= new Date(coupon.expiryDate).toLocaleDateString() %></td>
                            <td>
                                <span id="status-<%= coupon._id %>" class="badge <%= coupon.isActive ? 'bg-success' : 'bg-danger' %>">
                                    <%= coupon.isActive ? 'Active' : 'Inactive' %>
                                </span>
                            </td>
                            <td>
                                <button id="toggle-<%= coupon._id %>" class="btn <%= coupon.isActive ? 'btn-danger' : 'btn-success' %>"
                                    onclick="toggleActive('<%= coupon._id %>')">
                                    <%= coupon.isActive ? 'Deactivate' : 'Activate' %>
                                </button>
                            </td>
                            <td>
                                <button class="btn btn-primary edit-coupon-btn"
                                    data-id="<%= coupon._id %>"
                                    data-code="<%= coupon.code %>"
                                    data-discount-type="<%= coupon.discountType %>"
                                    data-discount="<%= coupon.discount %>"
                                    data-min-purchase="<%= coupon.minPurchase %>"
                                    data-max-discount="<%= coupon.maxDiscount %>"
                                    data-expiry-date="<%= coupon.expiryDate.toISOString().split('T')[0] %>"
                                    data-is-active="<%= coupon.isActive %>"
                                    onclick="editCoupon(this)">
                                    Edit
                                </button>
                            </td>
                            <td>
                                <button class="btn btn-danger" onclick="deleteCoupon('<%= coupon._id %>')">Delete</button>
                            </td>
                        </tr>
                    <% }) %>
                <% } else { %>
                    <tr>
                        <td colspan="9" class="text-center">No coupons found</td>
                    </tr>
                <% } %>
            </tbody>
        </table>

        <% if (totalPages > 1) { %>
            <div class="pagination">
                <% if (currentPage > 1) { %>
                    <a href="?page=<%= currentPage-1 %>&search=<%= searchQuery %>">«</a>
                <% } %>
                <% for(let i=1; i <= totalPages; i++) { %>
                    <a href="?page=<%= i %>&search=<%= searchQuery %>" class="<%= i === currentPage ? 'active' : '' %>"><%= i %></a>
                <% } %>
                <% if (currentPage < totalPages) { %>
                    <a href="?page=<%= currentPage+1 %>&search=<%= searchQuery %>">»</a>
                <% } %>
            </div>
        <% } %>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
    <script>
        // Validate Coupon Form
        function validateCouponForm(formData) {
            const code = formData.code.trim();
            const discountType = formData.discountType;
            const discount = parseFloat(formData.discount);
            const minPurchase = parseFloat(formData.minPurchase) || 0;
            const maxDiscount = parseFloat(formData.maxDiscount) || 0;
            const expiryDate = new Date(formData.expiryDate);
            const today = new Date();
            today.setHours(0, 0, 0, 0);

            // Validate Coupon Code
            if (!code || code.length < 3 || code.length > 20 || !/^[a-zA-Z0-9]+$/.test(code)) {
                Swal.fire({
                    icon: "error",
                    title: "Invalid Coupon Code",
                    text: "Coupon code must be 3-20 alphanumeric characters.",
                    confirmButtonText: "OK",
                });
                return false;
            }

            // Validate Discount Type
            if (!["percentage", "fixed"].includes(discountType)) {
                Swal.fire({
                    icon: "error",
                    title: "Invalid Discount Type",
                    text: "Discount type must be Percentage or Fixed Amount.",
                    confirmButtonText: "OK",
                });
                return false;
            }

            // Validate Discount
            if (isNaN(discount) || discount <= 0) {
                Swal.fire({
                    icon: "error",
                    title: "Invalid Discount",
                    text: "Discount must be a positive number.",
                    confirmButtonText: "OK",
                });
                return false;
            }
            if (discountType === "percentage" && (discount > 100 || discount < 1)) {
                Swal.fire({
                    icon: "error",
                    title: "Invalid Discount",
                    text: "Percentage discount must be between 1% and 100%.",
                    confirmButtonText: "OK",
                });
                return false;
            }
            if (discountType === "fixed" && discount > 10000) {
                Swal.fire({
                    icon: "error",
                    title: "Invalid Discount",
                    text: "Fixed discount cannot exceed ₹10,000.",
                    confirmButtonText: "OK",
                });
                return false;
            }

            // Validate Minimum Purchase
            if (isNaN(minPurchase) || minPurchase < 0) {
                Swal.fire({
                    icon: "error",
                    title: "Invalid Minimum Purchase",
                    text: "Minimum purchase must be a non-negative number.",
                    confirmButtonText: "OK",
                });
                return false;
            }

            // Validate Maximum Discount
            if (isNaN(maxDiscount) || maxDiscount < 0) {
                Swal.fire({
                    icon: "error",
                    title: "Invalid Maximum Discount",
                    text: "Maximum discount must be a non-negative number.",
                    confirmButtonText: "OK",
                });
                return false;
            }
            if (discountType === "percentage" && maxDiscount > 10000) {
                Swal.fire({
                    icon: "error",
                    title: "Invalid Maximum Discount",
                    text: "Maximum discount for percentage coupons cannot exceed ₹10,000.",
                    confirmButtonText: "OK",
                });
                return false;
            }

            // Validate Expiry Date
            if (isNaN(expiryDate.getTime()) || expiryDate < today) {
                Swal.fire({
                    icon: "error",
                    title: "Invalid Expiry Date",
                    text: "Expiry date must be a valid date and not in the past.",
                    confirmButtonText: "OK",
                });
                return false;
            }

            return true;
        }

        // Toggle Active Status
        async function toggleActive(id) {
            const toggleBtn = document.getElementById(`toggle-${id}`);
            const statusSpan = document.getElementById(`status-${id}`);
            const isDeactivating = toggleBtn.textContent === "Deactivate";

            const result = await Swal.fire({
                title: `Are you sure?`,
                text: `This will ${isDeactivating ? "deactivate" : "activate"} the coupon!`,
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: `Yes, ${isDeactivating ? "deactivate" : "activate"} it!`,
                cancelButtonText: "No, cancel",
            });

            if (result.isConfirmed) {
                try {
                    const response = await fetch(`/admin/coupons/toggle/${id}`, {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                    });
                    const data = await response.json();
                    if (data.success) {
                        toggleBtn.textContent = isDeactivating ? "Activate" : "Deactivate";
                        toggleBtn.classList.toggle("btn-danger", !isDeactivating);
                        toggleBtn.classList.toggle("btn-success", isDeactivating);
                        statusSpan.textContent = isDeactivating ? "Inactive" : "Active";
                        statusSpan.classList.toggle("bg-success", !isDeactivating);
                        statusSpan.classList.toggle("bg-danger", isDeactivating);
                        Swal.fire({
                            icon: "success",
                            title: "Success",
                            text: `Coupon ${isDeactivating ? "deactivated" : "activated"} successfully!`,
                            confirmButtonText: "OK",
                        });
                    } else {
                        Swal.fire({
                            icon: "error",
                            title: "Error",
                            text: data.message || `Error ${isDeactivating ? "deactivating" : "activating"} coupon`,
                            confirmButtonText: "OK",
                        });
                    }
                } catch (error) {
                    console.error(`Error ${isDeactivating ? "deactivating" : "activating"} coupon:`, error);
                    Swal.fire({
                        icon: "error",
                        title: "Error",
                        text: `Error ${isDeactivating ? "deactivating" : "activating"} coupon`,
                        confirmButtonText: "OK",
                    });
                }
            }
        }

        // Handle Form Submission for Adding/Editing Coupon
        document.getElementById("couponForm").addEventListener("submit", async function (e) {
            e.preventDefault();
            const couponId = document.getElementById("couponForm").dataset.couponId || null;
            const url = couponId ? `/admin/coupons/edit/${couponId}` : "/admin/coupons/add";
            const method = couponId ? "PUT" : "POST";
            const isEditing = !!couponId;

            const formData = {
                code: document.getElementById("couponCode").value,
                discountType: document.getElementById("discountType").value,
                discount: parseFloat(document.getElementById("discount").value),
                minPurchase: parseFloat(document.getElementById("minPurchase").value) || 0,
                maxDiscount: parseFloat(document.getElementById("maxDiscount").value) || 0,
                expiryDate: document.getElementById("expiryDate").value,
                isActive: document.getElementById("isActive").value === "true",
            };

            // Validate form data
            if (!validateCouponForm(formData)) {
                return;
            }

            console.log('Submitting coupon form:', { url, method, formData });

            try {
                const response = await fetch(url, {
                    method: method,
                    headers: {
                        "Content-Type": "application/json",
                        "Accept": "application/json",
                    },
                    body: JSON.stringify(formData),
                });

                let data;
                const contentType = response.headers.get("content-type");
                if (contentType && contentType.includes("application/json")) {
                    data = await response.json();
                } else {
                    const text = await response.text();
                    console.error('Non-JSON response:', text);
                    throw new Error(`Expected JSON but received HTML or other content: ${text.slice(0, 100)}...`);
                }

                if (data.success) {
                    Swal.fire({
                        icon: "success",
                        title: "Success",
                        text: isEditing ? "Coupon updated successfully!" : "Coupon added successfully!",
                        confirmButtonText: "OK",
                    }).then(() => {
                        window.location.reload();
                    });
                } else {
                    Swal.fire({
                        icon: "error",
                        title: "Error",
                        text: data.message || (isEditing ? "Error updating coupon" : "Error adding coupon"),
                        confirmButtonText: "OK",
                    });
                }
            } catch (error) {
                console.error("Error saving coupon:", error);
                Swal.fire({
                    icon: "error",
                    title: "Error",
                    text: `Error ${isEditing ? "updating" : "adding"} coupon: ${error.message}`,
                    confirmButtonText: "OK",
                });
            }
        });

        // Clear Form
        document.getElementById("clearForm").addEventListener("click", function () {
            document.getElementById("couponForm").reset();
            document.getElementById("couponForm").dataset.couponId = "";
            document.getElementById("couponCode").readOnly = false;
            document.getElementById("couponForm").querySelector("button[type='submit']").textContent = "Create Coupon";
            document.getElementById("isActive").parentElement.style.display = "none"; // Hide isActive field
        });

        // Handle Search
        document.getElementById("searchButton").addEventListener("click", function () {
            const searchQuery = document.getElementById("searchInput").value;
            window.location.href = `/admin/coupons?page=1&search=${encodeURIComponent(searchQuery)}`;
        });

        // Clear Search
        document.getElementById("clearSearch").addEventListener("click", function () {
            window.location.href = "/admin/coupons?page=1";
        });

        // Edit Coupon
        function editCoupon(button) {
            const couponId = button.dataset.id;
            document.getElementById("couponForm").dataset.couponId = couponId;
            document.getElementById("couponCode").value = button.dataset.code;
            document.getElementById("discountType").value = button.dataset.discountType;
            document.getElementById("discount").value = button.dataset.discount;
            document.getElementById("minPurchase").value = button.dataset.minPurchase || "";
            document.getElementById("maxDiscount").value = button.dataset.maxDiscount || "";
            document.getElementById("expiryDate").value = button.dataset.expiryDate;
            document.getElementById("isActive").value = button.dataset.isActive;
            document.getElementById("isActive").parentElement.style.display = "block"; // Show isActive field
            document.getElementById("couponForm").querySelector("button[type='submit']").textContent = "Save Changes";
        }

        // Delete Coupon
        async function deleteCoupon(id) {
            const result = await Swal.fire({
                title: "Are you sure?",
                text: "This will delete the coupon permanently!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Yes, delete it!",
                cancelButtonText: "No, cancel",
            });

            if (result.isConfirmed) {
                try {
                    const response = await fetch(`/admin/coupons/delete/${id}`, {
                        method: "DELETE",
                        headers: { "Content-Type": "application/json" },
                    });
                    const data = await response.json();
                    if (data.success) {
                        Swal.fire({
                            icon: "success",
                            title: "Success",
                            text: "Coupon deleted successfully!",
                            confirmButtonText: "OK",
                        }).then(() => {
                            window.location.reload();
                        });
                    } else {
                        Swal.fire({
                            icon: "error",
                            title: "Error",
                            text: data.message || "Error deleting coupon",
                            confirmButtonText: "OK",
                        });
                    }
                } catch (error) {
                    console.error("Error deleting coupon:", error);
                    Swal.fire({
                        icon: "error",
                        title: "Error",
                        text: "Error deleting coupon",
                        confirmButtonText: "OK",
                    });
                }
            }
        }
    </script>
</body>
</html>